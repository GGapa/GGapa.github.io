<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>OI &#8211; GGapa&#039;s website</title>
	<atom:link href="http://ggapa.net/category/oi/feed/?simply_static_page=4747" rel="self" type="application/rss+xml" />
	<link>https://ggapa.github.io/</link>
	<description></description>
	<lastBuildDate>Wed, 21 Feb 2024 15:11:38 +0000</lastBuildDate>
	<language>zh-CN</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>https://ggapa.github.io/wp-content/uploads/2023/08/cropped-Untitled-32x32.png</url>
	<title>OI &#8211; GGapa&#039;s website</title>
	<link>https://ggapa.github.io/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>做题笔记(UVA)</title>
		<link>https://ggapa.github.io/2024/02/19/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0uva/</link>
					<comments>https://ggapa.github.io/2024/02/19/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0uva/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Mon, 19 Feb 2024 01:16:48 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=1125</guid>

					<description><![CDATA[UVA 12661 Funny Car Racing 一个标准的最短路，但是在计算距离这一方面需要注意，当我们 [&#8230;]]]></description>
										<content:encoded><![CDATA[<h3><a href="https://www.luogu.com.cn/problem/UVA12661">UVA 12661 Funny Car Racing</a></h3>
<p>一个标准的最短路，但是在计算距离这一方面需要注意，当我们来当一个赛道上时，会有以下几种情况：</p>
<ul>
<li>赛道正在开放，且在通过赛道之前赛道不会关闭，时间即为通过赛道的时间</li>
<li>赛道正在开放，但是剩余时间不足以通过赛道，时间即为等待时间加上关闭时间加上通过时间。</li>
<li>注意连边的时候，若开放时间小于所通过的时间，那么这条边就不用链接了。</li>
</ul>
<p>总结：看到最短路的题目，认真分析新的距离，无需多虑，直接跑最短路就可以，但是对于2023年CSP的一道题目，就需要认真分析性质，然后作答。<br />
最短路的贪心已经是证明过的了，无需再多虑。</p>
<h3><a href="https://www.luogu.com.cn/problem/UVA12716">UVA 12716 XOR GCD</a></h3>
<p>数论题，我们需要知道：</p>
<ul>
<li>$a \oplus b = c $ 等价于 $a\oplus c = b$。</li>
</ul>
<p>那么我们就可以枚举 $a$ 和枚举 $c$，然后算出 $b$，接着验证是否有 $\gcd(a, b) = c$, 因为 $c$ 时 $a$ 的约数，时间复杂度 $O(n\log n)$，而计算 $\gcd$ 的时间是 $O(\log n)$，总体时间复杂度 $O(n(\log n)^2)$。</p>
<p>时间复杂度过高，无法通过本题，考虑如何优化。</p>
<p>此时我们暴力打出 $a$、$b$、$c$ 之间的关系，我们可以发现出一个规律 $c = a - b$。</p>
<blockquote>
<p>证明：易得 $a  - b\le a\oplus b$，且 $a\oplus b \ge \gcd(a, b) = c$，考虑使用反证法，假设 $a  -b &gt; c $，可以得到 $c &lt; a - b \le a\oplus b$，与 $c = a\oplus b$ 矛盾，故 $a - b = c$ 得证。</p>
</blockquote>
<p>时间复杂度 $O(n \log n)$。</p>
<p><strong>值得注意的是：$\oplus$ 的运算优先级是低于 $=$ ，在进行判断的时候需要加 $()$。</strong></p>
<hr />
<p>但在考场上，我们就不能这么做，我们不需要管证明，我们直接打表看规律！！！</p>
<p>总结：</p>
<ul>
<li>我们应当牢记：<strong>暴力出奇迹，打表出省一！</strong> 谁告诉了我难题一定要推公式才能做呢？</li>
</ul>
<ul>
<li>打表应该是面对数学题/构造题的第一反应。</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2024/02/19/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0uva/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>LCS</title>
		<link>https://ggapa.github.io/2024/02/18/lcs/</link>
					<comments>https://ggapa.github.io/2024/02/18/lcs/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Sun, 18 Feb 2024 12:21:09 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<category><![CDATA[动态规划]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=1118</guid>

					<description><![CDATA[LCS——经典的 DP 问题，给定两个长度为 $n$ 的排列，试问二者的最长公共子序列。这是经典的区间 DP  [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>LCS——经典的 DP 问题，给定两个长度为 $n$ 的排列，试问二者的最长公共子序列。这是经典的区间 DP 问题，</p>
<p>首先考虑朴素做法，定义 $dp[i][j]$ 来表示第一个串的前 $i$ 位，第二个串的前 $j$ 的 $LCS$ 长度，易得状态转移方程：</p>
<ul>
<li>
<p>如果两个序列没有新的相同元素</p>
<p>$dp[i][j] = \max(dp[i-1][j],dp[i][j-1])$</p>
</li>
<li>
<p>否则</p>
<p>$dp[i][j]= \max(dp[i][j],dp[i-1][j-1]+1)$</p>
<p>时间复杂度 $O(n^2)$ 。</p>
</li>
</ul>
<pre><code class="language-cpp">#include &lt;iostream&gt;
using namespace std;
const int maxn = 1e4 + 5;

int a[maxn], b[maxn], f[maxn][maxn];

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin &gt;&gt; n;
    for(int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];
    for(int i = 1; i &lt;= n; i++) cin &gt;&gt; b[i];
    for(int i = 1; i &lt;= n; i++) {
        for(int j = 1; j &lt;= n; j++) {
            f[i][j] = max(f[i-1][j], f[i][j-1]);
            if(a[i] == b[j]) f[i][j] = max(f[i][j], f[i-1][j-1] + 1);
        }
    }
    cout &lt;&lt; f[n][n] &lt;&lt; &quot;\n&quot;;
    return 0;
}</code></pre>
<p>由于时间复杂度中惨了一份平方，所以说在大多数题目下都不适用，此时考虑进行优化。试着将 $LCS$ 问题转换成 $LIS$ 问题，因为我们两个排列，而排列中的所有元素均不相同，因此可以根据其出现的位置，把元素重新编号。</p>
<p>解释：</p>
<blockquote>
<p>因为<strong>最长公共子序列是按位向后比对的，所以a序列每个元素在b序列中的位置如果递增，就说明b中的这个数在a中的这个数整体位置偏后</strong>。</p>
<p>—— 离散小波变换</p>
</blockquote>
<p>时间复杂度 $O(n \log n)$。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define rep(i, a, b) for (int i = (a), stOwxc = (b); i &lt;= stOwxc; i++)
#define per(i, a, b) for (int i = (a), stOwxc = (b); i &gt;= stOwxc; i--)
using namespace std;
typedef long long ll;

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n, x;
    cin &gt;&gt; n;
    unordered_map&lt;int, int&gt; mp;
    rep(i, 1, n) cin &gt;&gt; x, mp[x] = i;
    vector&lt;int&gt; L;
    rep(i, 1, n) {
        cin &gt;&gt; x;
        if (!mp.count(x))
            continue;
        int s = mp[x];
        auto it = lower_bound(L.begin(), L.end(), s);
        if (it == L.end())
            L.push_back(s);
        else
            *it = s;
    }
    cout &lt;&lt; L.size() &lt;&lt; &#039;\n&#039;;
    return 0;
}</code></pre>
<p>注意：</p>
<ul>
<li><code>map</code> 的常数稍大，可以考虑 <code>unordered_map</code> 来解决问题，在洛谷模板题中，后者比前者快了 $50\%$ 。</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2024/02/18/lcs/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>调试技巧 &#038; 警钟敲烂</title>
		<link>https://ggapa.github.io/2024/02/18/%e8%b0%83%e8%af%95%e6%8a%80%e5%b7%a7-%e5%8f%8d%e6%80%9d%e6%80%bb%e7%bb%93/</link>
					<comments>https://ggapa.github.io/2024/02/18/%e8%b0%83%e8%af%95%e6%8a%80%e5%b7%a7-%e5%8f%8d%e6%80%9d%e6%80%bb%e7%bb%93/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Sun, 18 Feb 2024 03:58:24 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=1114</guid>

					<description><![CDATA[调试技巧 应在平时着重训练！ 对拍法和替换型类对拍法。 先查推导原则。 重构法。 模板总结： （1）减少每次需 [&#8230;]]]></description>
										<content:encoded><![CDATA[<h1>调试技巧</h1>
<p>应在平时着重训练！</p>
<ol>
<li>对拍法和替换型类对拍法。</li>
<li>先查推导原则。</li>
<li>重构法。</li>
<li>模板总结：<br />
（1）减少每次需要动的部分。<br />
（2）记熟不需要动的部分（搞清楚哪些死记哪些理解性记忆）。</li>
<li>错题本。<br />
6.小块小块代码调试 </li>
</ol>
<h1>警钟撅烂</h1>
<ul>
<li>
<p>注意 <code>set</code> 和 <code>multiset</code> 不要用混了！</p>
</li>
<li>
<p>在连边的时候确定好关系，不要盲目进行连边</p>
</li>
</ul>
<h1>注意</h1>
<ul>
<li>只有查找没有修改的话可以使用 <code>vector</code>，常数比 <code>set</code> 要小，<code>set</code> 适用于有修改的。</li>
<li>BIT 在进行求和时使用 <code>long long</code>。</li>
</ul>
<h1>方法论</h1>
<ul>
<li>打表是面对数学题/构造题的第一选择</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2024/02/18/%e8%b0%83%e8%af%95%e6%8a%80%e5%b7%a7-%e5%8f%8d%e6%80%9d%e6%80%bb%e7%bb%93/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>做题笔记（CodeForces）</title>
		<link>https://ggapa.github.io/2024/02/14/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0%ef%bc%88codeforces%ef%bc%89/</link>
					<comments>https://ggapa.github.io/2024/02/14/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0%ef%bc%88codeforces%ef%bc%89/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Wed, 14 Feb 2024 03:07:06 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<category><![CDATA[CodeForces]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=1100</guid>

					<description><![CDATA[比赛补题 Codeforces Round 925 (Div. 3)(CF1931) A- D 简单 F 将题 [&#8230;]]]></description>
										<content:encoded><![CDATA[<h1>比赛补题</h1>
<h2>Codeforces Round 925 (Div. 3)(CF1931)</h2>
<h3>A- D 简单</h3>
<h3>F</h3>
<p>将题目条件转化一下，相当于就是给了一堆先后关系，考虑将前面的与后面的连边，也就是 $a<em>{ij} \rightarrow a</em>{ij+1}$ 连边，然后用拓扑判环，如果无环则有解，反之亦然。</p>
<p>总结：</p>
<ul>
<li>对于题目中有一堆关系时，可以互相连边，若有环，则说明了关系不成立。 </li>
<li><img src="https://s.w.org/images/core/emoji/14.0.0/72x72/2753.png" alt="❓" class="wp-smiley" style="height: 1em; max-height: 1em;" />连边还适用于排序类问题。</li>
</ul>
<h3>G</h3>
<p><img decoding="async" src="https://espresso.codeforces.com/d862915ed3dc627101b0e632c1c778b818648879.png" alt="" /></p>
<p>四个拼图，其个数记为 $c_1,c_2,c_3,c_4$ ，分析拼图的凹凸性，只有拼图 1、2 会改变整个序列的凹凸性，且 1、2 拼图只能交替拼在一起。</p>
<p>那么可以得到，若 $|c_1-c_2| &gt; 1$ 则问题无解，否则一定有解，而且拼图 3、4 并不会相互影响，我们可以进行分类讨论。</p>
<ul>
<li>
<p>若 $c_1 = c_2 = 0$ ，且 $c_3\neq 0 且 c_4 \neq 0$ ，则无解，否则方案数为 1。</p>
</li>
<li>
<p>若 $c_1 = c_2$ ，有两种情况：</p>
<ol>
<li>若 1 开头，那么 3 有 $c_1$ 个地方可以插入，4 有 $c_1 + 1$ 个地方可以插入，方案数为 $\binom{c_1+c_3-1}{c_1-1} \binom{c_2+c_4}{c_1}$ 。</li>
<li>若 2 开头，那么 3 有 $c_1 + 1$ 个地方可以插入，4 有 $c_1$ 个地方可以插入，方案数为 $\binom{c_1+c_3}{c_1} \binom{c_1+c_4-1}{c_1-1}$。</li>
</ol>
<p>总方案数为二者的和 $\binom{c_1+c_3-1}{c_1-1} \binom{c_2+c_4}{c_1} + \binom{c_1+c_3}{c_1}\binom{c_1+c_4-1}{c_1-1}$。</p>
</li>
<li>
<p>若 $c_1 = c_2 + 1$ 拼好 1,2 只有一种方案，3,4 均有 $c_1$ 个地方可以插入，方案数为 $\binom{c_1+c_3 - 1}{c_1 - 1} \binom{c_1+c_4-1}{c_1-1}$。</p>
</li>
<li>
<p>若 $c_1 = c_2 - 1$ 拼好 1,2 也只有一种方案， 3,4 均有 $c_1 + 1 $ 个地方可以插入，方案数为 $\binom{c_1+c_3}{c_1} \binom{c_1+c_4}{c_1}$。</p>
</li>
</ul>
<p>预处理组合数，$O(1)$ 询问即可。</p>
<p>总结： </p>
<ul>
<li>若有无解的情况，可以先分析无解的情况。</li>
<li>若某项事物对于某些性质没有改变，则无需在意，优先分析情况比较少且对某些性质（比如说有无解）有影响的。</li>
</ul>
<h1>杂题选做</h1>
<h3><a href="https://codeforces.com/problemset/problem/837/D">837D Round Subset</a></h3>
<p>一眼和 2、5 因数有关系。</p>
<p><del>额，然后就不会了。</del></p>
<p>我们定义 $p5$ 代表数字 5 的最大次幂，$p5(i)$ 代表数字 $i$ 5 次幂的数量；$p2$ 同理。</p>
<p>定义 $dp(i, j, k)$ 代表我们已经遍历了 $i$ 个数，选择了 $j$ 个所得到的 5 的次幂的数量为 $k$ ，所得到 $2$ 的次幂的最大值。这就是经典的背包问题。我们分为两种情况，列出如下转移方程。</p>
<ul>
<li>$dp(i + 1, j + 1, k + p5(i)) = \max(dp(i + 1, j + 1, l + p5(i)), dp(i, j, k)  + p2(i))$ </li>
<li>$dp(i + 1, j, k) = max(dp(i + 1, j, k ), dp(i, j, k))$</li>
</ul>
<p>因为一个 0 是由 一个 2 和 5 相乘得到的，最终的答案为 $\min(i, dp(n, k, i))$ ，这里的 $k$ 是题目中给定的 $k$ ，但是上文的不是，<del>我懒得改了将就看</del>。<br />
时间复杂度 $O(n^3)$</p>
<p><del>总结：分析性质，尝试将某些值看成贡献</del></p>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2024/02/14/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0%ef%bc%88codeforces%ef%bc%89/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>做题笔记(CSES)</title>
		<link>https://ggapa.github.io/2024/02/03/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0cesc/</link>
					<comments>https://ggapa.github.io/2024/02/03/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0cesc/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Sat, 03 Feb 2024 15:18:49 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<category><![CDATA[做题笔记]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=1051</guid>

					<description><![CDATA[我也不知道为什么下划线一多 Latex 就要崩掉，我已经不想管了。 CSES - 1075 Permutati [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><del>我也不知道为什么下划线一多 Latex 就要崩掉，我已经不想管了。</del></p>
<h3><a href="https://vjudge.net/problem/CSES-1075">CSES - 1075 Permutations II</a></h3>
<p>动态规划好题。</p>
<h4>解法一（recommend)</h4>
<p>定义 $F(i, j, k)$ $1$ 表示在 1 到 $i$ 的排列中，满足有 $j$ 对相邻的 $&lt;i$ 的差为 $1$，$k = 1$ 或 $0$ 分别对应 $i$ 和 $i - 1$ 是否相邻的排列个数，易得 $F(1, 0, 0) = 1$，$F(2, 0, 1) = 2$。设当前已经处理完了前 $i$ 个排列的情况，我们考虑 $i + 1$ 放置的位置。</p>
<ul>
<li>如果 $i$ 和 $i - 1$ 不相邻，将 $i + 1$ 放到 $i$ 旁边有两种选择，$F(i + 1, j, 1) += 2F(i, j, 0)$。</li>
<li>
<p>如果 $i$ 和 $i - 1$ 相邻，将 $i$ 插入到 $i$ 的两侧有两种情况：</p>
<ol>
<li>添加到 $i$ 和 $i - 1 $ 外侧，此时产生了一个新的相差为 $1$ 的相邻元素，$F(i + 1, j + 1, 1) += F(i, j, 1)$。</li>
<li>添加到 $i$ 和 $i - 1$ 中间，此时相差为 1 的相邻元素数量并没有改变，$F(i + 1, j, 1) += F(i，j, 1)$</li>
</ol>
</li>
<li>如果将 $i$ 加入到原本相差 $1$ 的两个元素($&lt;i$)中， 相差的元素会减少一对，此时依然分两种情况：
<ol>
<li>$i$ 和 $i - 1$ 是相邻的，$F(i + 1, j, 0) += j \times F(i, j, 1)$ 。</li>
<li>$i$  和 $i - 1$ 不相邻，此时会使 $j$ 减少 $1$ ，$F(i + 1, j - 1, 0) += j \times F(i, j, 0)$。</li>
</ol>
</li>
<li>如果将 $i + 1$ 放到序列的其他位置（不能放在 $i$ 和  $i - 1$ 之间，上文已经讨论过了这种情况），此时有 $i - j - 1$ 个位置可以用，还是分两种情况：
<ol>
<li>若 $i$ 和 $i - 1$ 不相邻，$F(i + 1, j, 0) += (i-  j-  1) \times F(i, j, 0)$ 。</li>
<li>若 $i$ 和 $i - 1$ 是相邻的，$F(i + 1, j + 1, 0) += (i - j - 1) \times F(i, j, 1)$。</li>
</ol>
</li>
</ul>
<p>至此，我们已经分析完了所有的情况，最终的所求答案为 $F(n, 0, 0)$ ，时间复杂度  $O(n^2)$。</p>
<h4>解法二 <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/2753.png" alt="❓" class="wp-smiley" style="height: 1em; max-height: 1em;" /></h4>
<p>这玩意是有规律的，详见 <a href="https://oeis.org/A002464">OEIS - A002464</a> ，怎么推出来的等我去问问大佬。</p>
<p>我拿到大佬的答复了，但好像没有看太懂，我先放原话在这里。</p>
<p><img decoding="async" src="https://s11.ax1x.com/2024/02/21/pFtjltK.png" alt="" /></p>
<p><a href="https://vjudge.net/solution/49146336">AC code by CYR</a></p>
<h4>总结</h4>
<p>一开始做这道题的时候并没有想出来这道题是动态规划，我还以为是数学题，甚至都已经发现了前后两种状态之间的关系，若有很<strong>明显的关系</strong>，首先要考虑的就是<strong>动态规划或组合递推</strong>。</p>
<p>关于状态的设计，需要找到多个会影响的维度，大概就是以下几点：</p>
<ol>
<li>前 $i$ 个元素所求得的答案。</li>
<li>会对后续内容产生影响的 $j$ 。</li>
<li>以及是否存在某些特殊情况会导致规律不适用的布尔值 $k$ 。</li>
</ol>
<h3>CSES-1077 Sliding Window Cost</h3>
<h4>题目大意</h4>
<p>给定一个包含 $n$ 个整数的数组。你的任务是计算每个由 $k$ 个元素组成的窗口，从左到右，使所有元素相等的最小总成本。</p>
<p>你可以用成本为 $x$ 增加或减少每个元素，其中 $x$ 是新值和原始值之间的差值。总成本是这些成本的总和。</p>
<h4>解题思路</h4>
<p>是滑动窗口，我们定义两个集合 $lq$ 和 $rq$ 分别代表小于等于和大于中位数的元素，其中 $lq$ 的最后一个元素就是区间内的中位数。定义 $m$ 表示区间内第 $m$ 个数为中位数。</p>
<p>在进行窗口滑动时，考虑如何更新 $lq$ 和 $rq$：</p>
<ul>
<li>若 $|lq| &lt; m$ ，应当先在 $rq$ 中插入当前元素，接着将 $rq$ 中最小的元素转移到 $lq$ 中。</li>
<li>否则，应当在 $lq$ 中插入当前元素，接着嫁给你 $lq$ 中的最大元素转移到 $rq$ 中。</li>
</ul>
<p>为了计算当当前区间的最小成本，我们定义：</p>
<ul>
<li>$ls$ 代表 $lq$ 中元素的总和。</li>
<li>$rs$ 代表 $rq$ 中元素的总和。</li>
<li>$med$ 代表中位数，也就是 $ls$ 中最大的元素。</li>
</ul>
<p>那么可以得到区间最小总成本为：$(med\cdot lc - ls) + (rs - med\cdot rc)$ 。</p>
<p><a href="https://vjudge.net/solution/49062009/yGEPyhEqMlS9FX0yr1ND">AC code</a></p>
<h4>总结</h4>
<p>对于区间滑动窗口中位数问题，可以考虑建立两个集合，来进行求解。对于滑动窗口问题，<code>set</code> 是一个很好的选择。</p>
<h3><a href="https://vjudge.net/problem/CSES-1093">CSES - 1093 Two Sets II</a></h3>
<p>首先考虑无解的情况，记 $N = \sum_{1}^{n}$，易得若 $2|n$ 则一定有解。</p>
<p>这 $n$ 个数的和为 $\frac{n(n +1)}{2}$ ，那么每一部分的的和为 $\frac{n(n +1)}{4}$，题目中 $n$ 的范围较小， 这暗示了用 01 背包来解决问题。</p>
<p>我们令 $\texttt{dp}{[i][j]}$ 代表在前 $1-i$ 个数中，组成和为 $j$ 的数量，可以得到转移方程为 $\texttt{dp}{[i][j]} = \texttt{dp}{[i-1][j]} + \texttt{dp}[i-1][j - i]$，增添或者不增添的情况。</p>
<p><a href="https://vjudge.net/solution/48920960/rxrommxRnKl5flEe4y9b">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-1097#author=GPT_zh">CSES - 1097 Removal Game</a></h3>
<p>定义 $F(i, j)$ 代表 $[i, j]$ 中先手的最大值，$S(a, b)$ 代表区间$[a, b]$ 的元素和。</p>
<p>有 $F(i, i) = X_i, F(i, j)  = \max(S(i + 1, j) - F(i + 1, j)+ X_i, S(i, j - 1) - F(i, j - 1) + X_j)$ 。</p>
<p>以上式子代表了先手的两种决策，分别是选左端或右端，接着减去对手（由于对手在上一轮算作先手，所以依然是 $F$ 数组）在剩余区间的最大得分。</p>
<h4>无关</h4>
<p>我隐约记得还有一道题类似于这种从两端开始取，但是那道题我是记录上一次取的是左侧还是右侧。</p>
<h4>总结</h4>
<p>取数游戏，经典的区间 DP，常规做法就是拿 DP 数组记录左右端点。</p>
<p><a href="https://vjudge.net/solution/49207881">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-1140#author=GPT_zh">CSES - 1140 Projects</a></h3>
<p>由于天数很大， 所以考虑离散化。</p>
<p>令 $dp_i = 在第 i天之前我们可以赚到的最大金额$，若现有一任务 $i$，其开始时间为 $l_i$，结束时间为 $r_i$，所获得的奖金为 $v_i$。第 $i - 1$ 天所赚的钱会迁移到第 $i$ 天，则 $dp<em>i = dp</em>{i - 1}$。</p>
<p>则状态转移方程为：$dp_i = \max{dp_l{<em>j} + v</em>{j},dp_i}$ ，其中 $r_j$ 应等于 $i$。</p>
<p>总结：数值过大的可以考虑离散化，这一类某段时间单个问题可以考虑差分数组解决。</p>
<h3><a href="https://vjudge.net/problem/CSES-1194/origin">CSES - 1194 Monsters</a></h3>
<p>这道题很明显用 BFS，问题在于迷宫中出现了怪物，我们的勇士不能和怪物接触，转换一下就是，勇士不能到达怪物可能所在的区域。</p>
<p>在转换一下，怪物永远比勇士先走一步，勇士不能走到怪物所走过的面积，考虑把怪物和勇士在一起进行 BFS，将怪物先入队，这保证了怪物总是比勇士先走。</p>
<p>注意：不要忘记特判边界条件！</p>
<p>总结：调试优先检查边界条件，做题时可以考虑不同的入队顺序达到所需要的结果</p>
<p><a href="https://vjudge.net/solution/49008108/271sCw0fKPFv5Da33vZq">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-1203">CSES - 1203 Visiting Cities</a></h3>
<p>双向最短路和大数判断相等操作，</p>
<p>若一个点 $i$ 一定处于 $1$  到  $n$ 的最短路上，那么：</p>
<ul>
<li>$dis(1, i) + dis(i, n) = dis(1,n)$。</li>
<li>$way(1,i)\times way(i, n) = way(i ,n)$ 。</li>
</ul>
<p>其中我们定义 $dis(u, v)$ 代表节点 $u$ 致节点 $v$  的最短距离， $way(u, v)$ 代表节点 $u$ 到 $v$ 的最短路数量。</p>
<p>考虑令起点分别为 $1$ 和 $n$ ，跑两次 <code>Dijkstra</code>，接着就能解决以上的判断。但是会有一个问题，最短路的数量可能会超过 <code>long long </code> 所承受的，又因为此不要求输出最终的数值，只需要判断是否相等，我们可以挑选两个大质数，分别对两个数组进行操作，若最后结果相同的概率是非常小的。</p>
<p>这种方法是用于判断大数是否相同的常用套路，我们应当积累常用质数：</p>
<ul>
<li>998244353、1e9 + 7、1e8 + 7、1e9 + 9</li>
</ul>
<p>由于这道题卡 9982444353 不能用。<br />
<a href="https://vjudge.net/solution/49114207/R3p5cDqmTNJRrdImTm8t">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-1625#author=GPT_zh">CSES - 1625 Grid Paths</a></h3>
<p>一道非常好的搜索题</p>
<h4>朴素算法</h4>
<p>我们简单的使用回溯法进行爆搜，并计算这样的路径数量。</p>
<p>运行时间：483s</p>
<p>递归调用次数：760亿</p>
<h4>优化1</h4>
<p>如果在访问了所有的方格前就到达了终点，又或者是步数已经达到了指定步数却还没有到。满足任意一个就可以退出搜索。</p>
<p>运行时间：119s</p>
<p>递归调用次数：200亿</p>
<h4>优化2</h4>
<p>如果碰到了方格边缘，则会把整个地图分成两个部分，若其中包含还未访问过的方格，则一定无解，退出递归即可。</p>
<p>运行时间：1.8s</p>
<p>递归调用次数：2.21亿</p>
<h4>优化3</h4>
<p>考虑对优化 2 进行拓展，若在搜索时无法继续前进，需要向左或者向右转，网格就会分成两个部分，若两者中包含未被访问过的方格。很明显，此时一定无解。</p>
<p>运行时间：0.6s</p>
<p>递归调用次数：6900万</p>
<hr />
<p>经过了优化三的优化之后，我们已经可以通过本题，为了达到优化三，我们需要提前将方格的边缘包围起来，俗话说就是将边缘的 <code>vis</code> 数组标记为 <code>true</code> 。</p>
<blockquote>
<p>In backtracking, the search tree is usually large and even simple observations can effectively prune the search. Especially useful are optimizations that occur during the first steps of the algorithm, i.e., at the top of the search tree.</p>
<p>在进行回溯算法时，搜索树通常会非常庞大，即使是进行简单的观察也能有效的剪枝。尤其是在回溯算法的前几步非常有效果，也就是搜索树的顶端。</p>
<p>——<a href="https://usaco.guide/problems/cses-1625-grid-paths/solution">USACO Guide</a></p>
</blockquote>
<p><a href="https://vjudge.net/solution/49021389/iDroLWx5FiFH4LSgSuHY">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-1757#author=GPT_zh">CSES - 1757 Course Schedule II </a></h3>
<p>互相有先后关系，连边跑拓扑排序的经典问题，本质上属于贪心。</p>
<p>注意：</p>
<ul>
<li>需要注意边与边之间的方向，注意输出的方式，可以考虑通过优先队列来维护</li>
</ul>
<p><a href="https://vjudge.net/solution/49117315/AuUcWmbwfUkyhrIrAsGU">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-2179">CSES - 2179 Even Outdegree Edges</a></h3>
<p>图论</p>
<p>考虑在进行 DFS 生成树时直接贪心构造。</p>
<p>错：</p>
<ul>
<li>在进行度数修改时把复杂操作直接过于简单化，直接将度数的标记直接规 0，并没有考虑多个儿子对答案造成的影响。</li>
</ul>
<p>总结：</p>
<ul>
<li>
<p>图论题可以先去一般化，先转换成树上问题，菊花图，链条来分析题目。</p>
</li>
<li>
<p>边处理边操作，贪心局部解转化为全部解，对于还需要判断有没有解决方案的问题，往往可以从局部到全局，若局部合法但是全局不合法，那么就是无解的。所以说在考虑贪心的时候往往不需要太在意无解的情况，自然而然的就能冒出来无解的情况。</p>
</li>
<li>
<p>但是这并不代表我们不分析无解情况，往往无解的情况会是一些题目的突破口可以帮助我们解题，但不应该被无解情况限制了思路，从而不敢考虑贪心</p>
</li>
</ul>
<p><a href="https://vjudge.net/solution/49104109/wYuu0QxmINTb1G2dUiTh">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-2228#author=0">CSES - 2228</a></h3>
<p>首先不考虑题目中的限制条件，方案数应该为：$k^n$，那么如果只缺了一个数字呢？如果缺了一个数字所构成的方案为：$(k - 1)^n \times \binom 1k$ 。</p>
<p>如何理解？乘号左边代表的剩下的 $k - 1$ 个数字填入 $n$ 个空位的方案数，而乘号右边则代表着，从 $k$ 个数字中挑选 1 个所需要的方案数。</p>
<p>我们类比，如果缺了 $i$ 个数字，构成的方案数为$(k - i)^n \times \binom ik$ ，但是呢，由于一定缺少一个数字的情况，已经包含了一定缺少两个数字的情况，所以说我们要用容斥原理。</p>
<p>最终的答案为：</p>
<p>$$k^n - \sum_{i = 1}^{k - 1} (k - i)^n \times\binom ik$$</p>
<p>总结：对于方案数问题可以优先考虑容斥原理；并从没有限制往有限制进行思考。</p>
<p><a href="https://vjudge.net/solution/48845881/5Km8tJ8PuokMY3UyeHff">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-2414">CSES - 2414 List of Sums</a></h3>
<p>考虑序序列 A 是单调递增，将 B 从小到大排序。我们可以推出以下结论：</p>
<ul>
<li>$A_0 + A_1 = B_0$</li>
<li>$A_0 + A_2 = B_1$</li>
</ul>
<p>那么我们可以得到：</p>
<ul>
<li>$A_2 - A_1 = B_1 - B_0$</li>
</ul>
<p>考虑 $A_1 + A_2$ ，它的值一定是 $B_i,i \in [2, n]$，这个说明了， $A_0$ 只有 $n - 2$ 种可能。</p>
<p>我们可以得到：$A_1 = \frac{B_i - B_1 + B_0}{2}$ ，$A_0 = \frac{B_1 + B_0 - B_i}2$，那么我们就可以便利每一个 $A_0$ 然后判断它能不能使 B 成立，如何测试？</p>
<p>对于每一轮测试，$A<em>i$ 就等于 $B</em>{\min} - A_i$，之后从 B 中判断 $A_j + A_i(j &lt; i)$ 是否在 B 中并删除。</p>
<p><a href="https://vjudge.net/solution/48810705/lpNKpEsYGnYwVRZe8VQh">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-2421">CSES - 2421 Counting Reorders </a></h3>
<p>俗话说“正难则反”，因为直接求合法的情况很明显非常难，所以考虑反着来。我们将一个字符串分成若干个区间，使得每个区间里面的字母都相同。</p>
<p>将所有的字母分成 $x$ 个区间的方案数为 $A(x)$，则对于初始字符串全部重新排列的情况数为 $A(n)$，一定有两个相邻字符重复的数目就是 $A(n - 1)$，此时一定有一个长度为 2 的区间中字母相同，剩余的 $n - 1$ 个区间任意排列</p>
<p>相似的，一定有 $i$ 个字母连续相同的数目是 $A(n - i)$，因为 $A(n)$ 中已经包含了 $A(n - 1)$ 的情况，而 $A(n - 1)$ 中，同样也包含了 $A(n - 2)$ 的情况，所以说考虑容斥原理，最终的答案为:</p>
<p>$$\sum_{i = 0}^{n} A(n - i) \times(-1)^n$$</p>
<p>但是该如何计算 $A(x)$ 呢？定义 $D(i, j)$ 代表前 $i$ 中字符，分成 $j$ 个区间的方案数，那么 $A(n) = D(26,n)$，显然 $D(0, 0) = 1$，记第 $i$ 中字符出现的次数为 $c$，显然当 $c = 0$ 时，$D(i, j) = D(i - 1, j)$。否则，这 $c$ 个字符就要分成 $k \in [1, c]$，个部分和已有的 $j$ 个区间混合，可以得到：</p>
<p>$$D(i, j + k) \gets D(i, j + k)+D(i - 1,j)\cdot \binom {j+k}{k}\cdot \binom{c - 1}{k - 1} $$</p>
<p>如何理解以上的式子呢？其中 $\binom {j+k}{k}$，表示将 $k$ 个区间插入原来的 $j$ 个区间中，就是在 $j + k$ 个区间中选择 $k$ 个，而 $\binom{c - 1}{k - 1}$ 可以通过插板法理解。</p>
<p>总结：</p>
<ol>
<li>对于正着求比较困难的组合数学题目，可以考虑反着求解。</li>
<li>对于题目性质进行分析，构造出现不同情况的概率，并考虑容斥</li>
<li>找到当前步骤和上一步骤的关系，进行递推。</li>
</ol>
<p><a href="https://vjudge.net/solution/48862105/77NzMr61ETRcPBZecWyq">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-2425#author=GPT_zh">CSES-2425 Stack Weights</a></h3>
<p>某位高人曾经说过：对于找充要条件的题目，那就把它所有的必要条件全部列出来。</p>
<p>那么我们就考虑列出充分条件，经过大量的演算算我们发现：</p>
<ul>
<li>如果堆 1 的重量大于堆 2 的重量，那么 $\forall i \in [1,n]$ ，定义 $l_i$ 表示堆 1 编号大于 $i$ 的砝码数，$r_i$ 代表堆 2 编号大于 $i$ 的砝码数，都有 $l_i &gt; r_i$。</li>
</ul>
<p>对于堆 2 同理，问题就转化成了求解能否在某一时刻，堆 1 、堆 2 都能满足以上条件。</p>
<p>可以通过记录前缀和来快速判断条件是否成立：</p>
<ul>
<li>若最小值不小于 0，则堆 1 一定重于堆 2</li>
<li>最大值不大于 0，则堆 2 一定重于堆 1</li>
<li>若以上条件均不满足，返回你寄了</li>
</ul>
<p>可以考虑通过线段树进行区间最大最小值维护，其他数据结构应该也可以，但是我太菜了不会。</p>
<p>时间复杂度 $O(n \log n)$ ，应该没有错吧。</p>
<p><a href="https://vjudge.net/solution/48801685/Y0FQLG49NbJKhS7CsXR0">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-2426">CSES - 2426 Programmers and Artists</a></h3>
<p>普通的枚举时间复杂度 $O(n^2)$ 会超时，考虑用贪心优化。</p>
<p>将每个人按照 $x - y$ 递减排序，考虑维护两个数组 $suf[i]$ 和 $pre[i]$，分别表示后 $i$ 个人进行的贡献和前 $i$ 个人进行的贡献。枚举时就考虑 $pre[i] + suf[i + 1]$，好像可以称作中途相遇？</p>
<p><a href="https://www.luogu.com.cn/problem/P7913">[CSP-S 2021] 廊桥分配</a> 也是一道类似的题目，把每一种可能情况枚举出来，接着通过中途相遇来做。</p>
<p>总结:</p>
<ul>
<li>
<p>什么题目可以通过中途相遇来做？</p>
<p>有两个集合 $A$、$B$，有一元素 $i$，若 $i \in A$ 为真，那么 $i\in B$ 一定为假，反之亦然。接着我们就可以通过某些手段预处理(排序)，接着在计算出 $A$ 和 $B$ 在不同大小的不同答案。接着通过一个 $O(n)$ 的枚举去统计答案即可。</p>
</li>
</ul>
<p><a href="https://vjudge.net/solution/49116012/9kTBWeMcuoIZbbUDN2Dz">AC code</a></p>
<h3><a href="https://vjudge.net/problem/CSES-2430">CSES - 2430 Binary Subsequences</a></h3>
<p>构造神题，依然是经典的反着来，我们先考虑正着推，记 $x$ 和 $y$ 分别代表以 0 结尾和以 1 结尾的子序列个数，如果接下来又是 0，则 $ x = x + y + 1$，如果下一位是 1 那么 $y = x + y + 1$。</p>
<p>由于 $x + y = n$ ，我们可以依次枚举 $x$ 和 $y$，然后反推出对应的 01 串，有点类似于辗转相除法。</p>
<p>均摊时间复杂度 $O(n\log n)$ </p>
<p><a href="https://vjudge.net/solution/49155238">AC code</a></p>
<h3><a href="https://vjudge.net/problem/OpenJ_Bailian-2356#author=GPT_zh">OpenJ_Bailian - 2356 Find a multiple</a></h3>
<p>定义 $s<em>i$ 代表 $\sum</em>{i=1}^{n} a_i$ ，若 $N|s_i$ ，则输出 $a_j,\forall j[1,i]$ 即可。</p>
<p>若 $s_i\equiv s_j\mod{N}(i&lt;j)$ ，则输出 $a_k,\forall k\in[i,j]$ 即可</p>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2024/02/03/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b0cesc/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>做题笔记(洛谷题单)</title>
		<link>https://ggapa.github.io/2024/02/01/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b01/</link>
					<comments>https://ggapa.github.io/2024/02/01/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b01/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Thu, 01 Feb 2024 15:11:07 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<category><![CDATA[做题笔记]]></category>
		<category><![CDATA[洛谷]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=1043</guid>

					<description><![CDATA[数据结构（线段树为主） 题单 P6569 [NOI Online #3 提高组] 魔法值 首先看题目数据范围， [&#8230;]]]></description>
										<content:encoded><![CDATA[<h1>数据结构（线段树为主）</h1>
<p><a href="https://www.luogu.com.cn/training/456614">题单</a></p>
<h3><a href="https://www.luogu.com.cn/problem/P6569">P6569 [NOI Online #3 提高组] 魔法值</a></h3>
<p>首先看题目数据范围，$n \leq 100$ ，这种情况要么说明这道题的时间复杂度是比较高的，要么就和矩阵乘法脱不开关系。</p>
<p>阅读题目之后，我们发现可以应用 Floyd 最短路，也就是矩阵乘法的思想去描述每一轮每一个城市的魔法值。</p>
<p>故这道题应该先用邻接矩阵建图，矩阵快速幂求解。</p>
<p>结果就超时了，考虑通过倍增，二进制分解优化。</p>
<p>预处理时间复杂度 $O(n^3\log n)$ ，单次询问时间复杂度 $O(n^2\log n)$ 。</p>
<p>总结：对于数据范围比较小的图论题要联想到邻接矩阵，对于经常会用到的数据不必重复计算，考虑记录下来优化程序的运行效率。</p>
<h3><a href="https://www.luogu.com.cn/problem/P8820">P8820 [CSP-S 2022] 数据传输</a></h3>
<p>试着由易到难，一步一步分析。</p>
<p>对于 $k = 1$ 的情况，答案就是两点之间的简单路径，考虑通过树链剖分实现。时间复杂度 $O(n \log n)$</p>
<p>对于 $n \leq 200 $时，可以考虑对于每一个节点，距离不超过 $k$ 的点连无向边，对于每一次询问跑最短路，时间复杂度 $O(q\cdot n^2\log n)$。</p>
<p>这个特殊性质非常的玄学，不知道是给什么算法的，<del>这都不知道，我太菜了</del>。</p>
<p>接着分析 $k = 2$ 的情况，额。</p>
<h3><a href="https://www.luogu.com.cn/problem/P4159">P4159 [SCOI2009] 迷路</a></h3>
<p>看到题目和数据范围后，不难想到矩阵快速幂求解 $k$ 步内到达某一结点的方案数这一类问题。</p>
<p>但是问题出现了，因为上述做法只能满足 &quot;01矩阵&quot;。</p>
<p>那我们就考虑将这个矩阵转化为 01矩阵不久完事了吗？</p>
<p>考虑给每个节点建立 8 个虚点，我们令 $(i,j)$ 表示距离节点 $i$，$j$ 个距离的点，$(i,0)$ 就代表节点 $i$，我们需要将 $(i, j)$ 和 $(i, j-1 )$ 通过一条有向边连接起来。</p>
<p>若此时有边连向这个节点，且距离为 $d$，那么我们就将它连接到 $(i, d - 1)$ 的节点处就可以了，此时这个邻接矩阵就转化为了 01 矩阵。</p>
<p>时间复杂度：$O((9n)^3 \log T)$</p>
<p>总结：如果一道题目是某类题型的变种，那我们可以将这道题想办法转化为我们熟悉的题型；</p>
<h3><a href="https://www.luogu.com.cn/problem/P2894">P2894 [USACO08FEB] Hotel G</a></h3>
<p>简单题。</p>
<p>一眼可以看出这是一个连续段问题，考虑通过线段树解决。</p>
<p>我们需要维护以下信息：</p>
<ul>
<li>
<p><code>perl</code> 左端点开始的连续空房间个数</p>
</li>
<li>
<p><code>perr</code> 右端点开始的连续空房间个数</p>
</li>
<li>
<p><code>mx</code> 区间内最长的连续空房间个数</p>
</li>
</ul>
<p>转移和区间最长子序列转移的思想差不多，值得注意的是，题目中要求是最靠左侧的，那么在查询的时候需要有限递归左儿子，接着是左儿子和右儿子，最后才是右儿子。</p>
<p>其余操作和普通线段树无异。</p>
<h3><a href="https://www.luogu.com.cn/problem/P8251">P8251 [NOI Online 2022 提高组] 丹钓战</a></h3>
<p>这道题比较重视思维，观察数据范围，很明显是要让我们先预处理，接着以比较小的复杂度进行查询。</p>
<p>考虑如何预处理，通过手推样例可以发现，如果一个二元组是成功的，那么它一定能将上一个成功的二元组弹出，而且一个二元组只可能被一个特定的二元组给弹出。</p>
<p>那么就可以通过栈来维护每一个二元组是由谁将它弹出去的。</p>
<p>时间复杂度：$O(n)$</p>
<p>由于预处理已经花费了 $O(n)$ 的时间，查询操作被压榨成了 $\log$ 级或者是常数级。</p>
<p>由之前的总结可以知道，对于可能会重复用到的数据，我们考虑通过倍增进行优化，这样查询的时间复杂度就变为了 $O(\log n)$ ，可以通过本题。</p>
<p>总结：对于一个数据范围比较大的题，它的最大时间复杂度一般不会超过 $O(n)$，若此时的询问次数也非常多就需要考虑预处理；若一道题目中，大多数情况下，他叫你找的特殊的东西，小于普通的东西，那么这个时候就可以考虑直接从特殊的东西入手（出现次数比较少的入手），弱化在普通的东西上面所花费的时间。</p>
<hr />
<h1>括号序列</h1>
<p><a href="https://www.luogu.com.cn/training/460433">题单</a></p>
<h3><a href="https://www.luogu.com.cn/problem/P7914">P7914 [CSP-S 2021] 括号序列</a></h3>
<p>看到题目，不难想到记忆化搜索。</p>
<p>类比普通的括号序列记忆化搜索，这道题目非常良心，已经帮我们把所有的情况都摆了出来，那么我们就考虑对这些情况进行考虑就足够了。</p>
<p>迅速打完记忆化，发现答案莫名其妙非常大，发现边界条件判断漏，寄了。</p>
<p>总结：若记忆化搜索返回的结果很大，有可能时边界条件没有判断清楚。</p>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2024/02/01/%e5%81%9a%e9%a2%98%e7%ac%94%e8%ae%b01/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>错题本</title>
		<link>https://ggapa.github.io/2024/01/27/%e9%94%99%e9%a2%98%e6%9c%ac/</link>
					<comments>https://ggapa.github.io/2024/01/27/%e9%94%99%e9%a2%98%e6%9c%ac/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Sat, 27 Jan 2024 12:09:46 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=1028</guid>

					<description><![CDATA[树链剖分 #include &#60;bits/stdc++.h&#62; using namespace std [&#8230;]]]></description>
										<content:encoded><![CDATA[<h1>树链剖分</h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N = 1e5 + 5;

int n, m, r, mod;
int a[N], aa[N],dep[N], size[N], top[N], hson[N], fa[N], dfn[N];
int cnt;

struct tree {
    int laz, sum;
    int l, r;
}t[N * 4];
vector&lt;int&gt; G[N];

#define ls (x &lt;&lt; 1)
#define rs (x &lt;&lt; 1 | 1)

void pushdown(int x) {      //懒标记下传出错
    if(!t[x].laz) return;    
    t[ls].sum = (t[ls].sum + t[x].laz * (t[ls].r - t[ls].l + 1) % mod) % mod;
    t[rs].sum = (t[rs].sum + t[x].laz * (t[rs].r - t[rs].l + 1) % mod) % mod;
    t[ls].laz = (t[ls].laz + t[x].laz) % mod; t[rs].laz = (t[rs].laz + t[x].laz) % mod;
    t[x].laz = 0;
}
void pushup(int x) {
    t[x].sum = (t[ls].sum + t[rs].sum) % mod;
}

void bulid(int x, int l, int r) {
    t[x].l = l; t[x].r = r;
    if(l == r) {
        t[x].sum = a[l] % mod;
        return ;
    }
    int mid = (l + r) &gt;&gt; 1;
    bulid(ls, l, mid);
    bulid(rs, mid + 1, r);
    pushup(x);
}

void modify(int x, int l, int r, int ch) {
    if(l &lt;= t[x].l &amp;&amp; t[x].r &lt;= r) {
        t[x].laz = (t[x].laz + ch) % mod;
        t[x].sum = (t[x].sum + ch * (t[x].r - t[x].l + 1) % mod) % mod;
        return ;
    }
    pushdown(x);
    int mid = (t[x].l + t[x].r) &gt;&gt; 1;
    if(l &lt;= mid) modify(ls, l, r, ch);
    if(r &gt; mid) modify(rs, l, r, ch);
    pushup(x);
}

int qurey(int x, int l, int r) {
    if(l &lt;= t[x].l &amp;&amp; t[x].r &lt;= r) {
        return t[x].sum;
    }
    pushdown(x);
    int mid = (t[x].l + t[x].r) &gt;&gt; 1, tmp = 0;
    if(l &lt;= mid) tmp = (tmp + qurey(ls, l, r)) % mod;
    if(r &gt; mid) tmp = (tmp + qurey(rs, l, r)) % mod;
    return tmp;
}

#undef ls
#undef rs

void dfs1(int x, int f) {
    dep[x] = dep[f] + 1; size[x] = 1; fa[x] = f;
    for(auto to : G[x] ) {
        if(to == f) continue;
        dfs1(to, x);
        size[x] += size[to];
        if(size[hson[x]] &lt; size[to]) hson[x] = to;
    }
}

void dfs2(int x, int tp) {
    dfn[x] = ++cnt;
    a[cnt] = aa[x];
    top[x] = tp;
    if(!hson[x]) return;
    dfs2(hson[x], tp);
    for(auto to : G[x] ) {
        if(to == fa[x] || to == hson[x]) continue;
        dfs2(to, to);
    }
}

void mrange(int x, int y, int ch) {
    while(top[x] != top[y]) {
        if(dep[top[x]] &lt; dep[top[y]]) swap(x, y);
        modify(1, dfn[top[x]], dfn[x], ch);
        x = fa[top[x]];
    }
    if(dep[x] &gt; dep[y]) swap(x, y);
    modify(1, dfn[x], dfn[y], ch);
}

int qrange(int x, int y) {
    int ans = 0;
    while(top[x] != top[y])  {
        if(dep[top[x]] &lt; dep[top[y]]) swap(x, y);
        ans = (ans + qurey(1, dfn[top[x]], dfn[x])) % mod;  //参数带错
        x = fa[top[x]];
    }
    if(dep[x] &gt; dep[y]) swap(x, y);
    ans = (ans + qurey(1, dfn[x], dfn[y])) % mod; 
    return ans;
}

void mson(int x, int ch) {
    modify(1, dfn[x], dfn[x] + size[x] - 1, ch);
}

int qson(int x) {
   return qurey(1, dfn[x], dfn[x] + size[x] - 1) % mod;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin &gt;&gt; n &gt;&gt; m &gt;&gt; r &gt;&gt; mod;
    for(int i = 1; i &lt;= n; i++) cin &gt;&gt; aa[i];
    for(int i = 1, u, v; i &lt; n; i++) {
        cin &gt;&gt; u &gt;&gt; v;
        G[u].push_back(v);
        G[v].push_back(u);
    }
    dfs1(r, 0);
    dfs2(r, r);
    bulid(1, 1, n);
    // for(int i = 1; i &lt;= n; i++) cout &lt;&lt; dfn[i] &lt;&lt; &#039;\n&#039;;
    while(m--) {
        int op, x, y, z;
        cin &gt;&gt; op;
        if(op == 1) {
            cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;
            mrange(x, y, z);
        }
        if(op == 2) {
            cin &gt;&gt; x &gt;&gt; y;
            cout &lt;&lt; qrange(x, y) % mod&lt;&lt; &#039;\n&#039;;
        }
        if(op == 3) {
            cin &gt;&gt; x &gt;&gt; z;
            mson(x, z);
        }
        if(op == 4) {
            cin &gt;&gt; x;

            cout &lt;&lt; qson(x) % mod&lt;&lt; &#039;\n&#039;;
        }
    }
    return 0;
}</code></pre>
<h1>网络最大流</h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define rep(i, a, b) for(int i = (a); i &lt;= (b); i++)
#define per(i, a, b) for(int i = (a); i &gt;= (b); i--)
using namespace std;
typedef long long ll;
const int N = 200 + 5, M = 5000 + 5;
#define int long long

int n, m, s, t;
int tot = 1, head[M], cur[M];
int dep[M];
ll ans;

struct edge {
    int v, nxt;
    ll val;
}e[M * 2];

void add(int u, int v, ll w) {
    e[++tot].v = v;
    e[tot].val = w;
    e[tot].nxt = head[u];
    head[u] = tot;

    e[++tot].v = u;
    e[tot].val = 0;
    e[tot].nxt = head[v];
    head[v] = tot;
}

int bfs() {
    queue&lt;int&gt; q;
    memset(dep, 0, sizeof(dep));    //数组没有清空，表现：死循环退不出去。
    q.push(s);
    dep[s] = 1;
    cur[s] = head[s];
    while(!q.empty()) {
        int u = q.front();
        q.pop();
        for(int i = head[u]; i; i = e[i].nxt) {
            int v = e[i].v;
            if(e[i].val &gt; 0 &amp;&amp; !dep[v]) {
                q.push(v);
                cur[v] = head[v];
                dep[v] = dep[u] + 1;
                if(v == t) return 1;
            }
        }
    }
    return dep[t];
}

int dfs(int u, ll sum) {
    if(u == t || !sum) return sum;
    ll k, res = 0;
    for(int i = cur[u]; i &amp;&amp; sum; i = e[i].nxt) {
        int v = e[i].v;
        cur[u] = i; //没有加弧优化TLE
        if(e[i].val &gt; 0 &amp;&amp; dep[v] == dep[u] + 1) {
            k = dfs(v, min(sum, e[i].val));
            if(k == 0) dep[v] = 0;
            e[i].val -= k;
            e[i^1].val += k;    //val错写成v，表现：可能死循环，也可能有一些其他的问题，尚不确定。
            res += k;
            sum -= k;
        }
    }
    return res;
}

signed main()  {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s &gt;&gt; t;
    rep(i, 1, m) {
        int u, v; ll w;
        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;
        add(u, v, w);
    }
    while(bfs()) {
        ans +=  dfs(s, LLONG_MAX);
    }
    cout &lt;&lt; ans &lt;&lt; &#039;\n&#039;;

    return 0;
}</code></pre>
<h1>历史最值线段树</h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define rep(i, a, b) for(int i = (a); i &lt;= (b); i++)
#define per(i ,a ,b) for(int i = (a); i &gt;= (b); i--)

using namespace std;
const int N = 5e5 + 5;
typedef long long ll;

int n, m;
int a[N];

struct tree{
    ll sum; 
    int l, r, maxa, cnt, se, maxb;
    int add1, add2, add3, add4;
}t[N &lt;&lt; 4];

#define ls x &lt;&lt; 1
#define rs x &lt;&lt; 1 | 1

void pushup(int x) {
    t[x].sum = t[ls].sum + t[rs].sum;
    t[x].maxa = max(t[ls].maxa, t[rs].maxa);
        t[x].maxb = max(t[ls].maxb, t[rs].maxb);
        if(t[ls].maxa == t[rs].maxa) {
        t[x].cnt = t[ls].cnt + t[rs].cnt;
        t[x].se = max(t[ls].se, t[rs].se);
    }
    if(t[ls].maxa &gt; t[rs].maxa)  {
        t[x].cnt = t[ls].cnt;
        t[x].se = max(t[ls].se, t[rs].maxa);
    }
    if(t[ls].maxa &lt; t[rs].maxa) {
        t[x].cnt = t[rs].cnt;
        t[x].se = max(t[ls].maxa, t[rs].se);
    }
}

void apply(int x, int tag1, int tag2, int tag3, int tag4) {
    t[x].sum += 1ll * tag1 * t[x].cnt + 1ll * tag2 * (t[x].r - t[x].l + 1 - t[x].cnt);
    t[x].maxb = max(t[x].maxb, t[x].maxa + tag3);       //在给maxb赋值的时候，将 = 写成 +=，表现：区间历史最大值莫名其妙很大。
    t[x].maxa += tag1;
    if(t[x].se != -2e9) t[x].se += tag2;
    t[x].add3 = max(t[x].add3, t[x].add1 + tag3);
    t[x].add4 = max(t[x].add4, t[x].add2 + tag4);
    t[x].add1 += tag1; t[x].add2 += tag2;
} 

void pushdown(int x) {

    int mxn = max(t[ls].maxa, t[rs].maxa);
    if(t[ls].maxa == mxn) 
        apply(ls, t[x].add1, t[x].add2, t[x].add3, t[x].add4);
    else apply(ls, t[x].add2, t[x].add2, t[x].add4, t[x].add4);     //else 的赋值错误，若不是最大值则应该赋非最大值的懒标记，表现：极少情况下（有可能是数据范围太小了）会偶尔冒出来一个错误的求和操作。
    if(t[rs].maxa == mxn) 
        apply(rs, t[x].add1, t[x].add2, t[x].add3, t[x].add4);
    else apply(rs, t[x].add2, t[x].add2, t[x].add4, t[x].add4);     // else 的赋值错误，若不是最大值则应该赋非最大值的懒标记，表现：极少情况下（有可能是数据范围太小了）会偶尔冒出来一个错误的求和操作。
    t[x].add1 = t[x].add2 = t[x].add3 = t[x].add4 = 0; 
}
void bulid(int x, int l, int r) {
    t[x].l = l; t[x].r = r;
    t[x].add1 = t[x].add2 = t[x].add3 = t[x].add4 = 0;
    if(l == r) {
        t[x].maxa =  t[x].maxb = t[x].sum = a[l];
        t[x].se = -2e9; t[x].cnt = 1; 
        return ;
    }
    int mid = (l + r) &gt;&gt; 1;
    bulid(ls, l, mid);
    bulid(rs, mid + 1, r);
    pushup(x);
}

void modify_add(int x, int l, int r, int v) {
    if(t[x].r &lt; l || t[x].l &gt; r) return ;
    if(l &lt;= t[x].l &amp;&amp; t[x].r &lt;= r) {
        apply(x, v, v, v, v);
        return ;
    }
    pushdown(x);    
    modify_add(ls, l, r, v); modify_add(rs, l, r, v);
    pushup(x);
}

void modify_min(int x, int l, int r, int v) {
    if(t[x].r &lt; l || t[x].l &gt; r || v &gt;= t[x].maxa) return ;     //退出条件少写了，表现：把最小值改大了。
    if(l &lt;= t[x].l &amp;&amp; t[x].r &lt;= r &amp;&amp; t[x].se &lt; v) {             //条件少写了，表现：把最小值改大了。
        int tmp = t[x].maxa - v;
        // t[x].sum -= 1ll * t[x].cnt * tmp;
        // t[x].maxa = v; t[x].add1 -= tmp;
        apply(x, -tmp, 0, -tmp, 0);
        // apply(x, v - t[x].maxa, 0, v - t[x].maxa, 0);
        return ;
    }
    pushdown(x);
    modify_min(ls, l, r, v); modify_min(rs, l, r, v);
    pushup(x);
}

ll query_sum(int x, int l, int r) {
    if(t[x].r &lt; l || t[x].l &gt; r) return 0;
    if(l &lt;= t[x].l &amp;&amp; t[x].r &lt;= r) 
        return t[x].sum;
    pushdown(x);
    return query_sum(ls, l, r) + query_sum(rs, l, r);
}

int query_maxa(int x, int l, int r) {
    if(t[x].r &lt; l || t[x].l &gt; r) return -2e9;   //不小心 return 0，而不是返回-inf，表现：最大值输出0
    if(l &lt;= t[x].l &amp;&amp; t[x].r &lt;= r) 
        return t[x].maxa;
    pushdown(x);
    return max(query_maxa(ls, l, r), query_maxa(rs, l, r));
}

int query_maxb(int x, int l, int r) {
    if(t[x].r &lt; l || t[x].l &gt; r) return -2e9;   //不小心 return 0，而不是返回-inf，表现：最大值输出0
    if(l &lt;= t[x].l &amp;&amp; t[x].r &lt;= r) 
        return t[x].maxb;
    pushdown(x);
    return max(query_maxb(ls, l, r),query_maxb(rs, l, r));
}

#undef ls
#undef rs

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin &gt;&gt; n &gt;&gt; m;
    rep(i, 1, n) cin &gt;&gt; a[i];
    bulid(1, 1, n);
    while(m--) {
        int op, l, r, v;
        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;
        if(op == 1) {
            cin &gt;&gt; v;
            modify_add(1, l, r, v);
        }
        if(op == 2) {
            cin &gt;&gt; v;
            modify_min(1, l, r, v);
        } 
        if(op == 3) cout &lt;&lt; query_sum(1, l, r) &lt;&lt; &#039;\n&#039;;
        if(op == 4) cout &lt;&lt; query_maxa(1, l, r) &lt;&lt; &#039;\n&#039;;
        if(op == 5) cout &lt;&lt; query_maxb(1, l, r) &lt;&lt; &#039;\n&#039;;
    }

    return 0;
}

// P6242 【模板】线段树 3（区间最值操作、区间历史最值）
</code></pre>
<h1>主席树</h1>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define int long long
const int maxn = 4e5 + 10, N = 2e5;
int n, m, tot, a[maxn &lt;&lt; 5], b[maxn &lt;&lt; 5], rt[maxn &lt;&lt; 5];
int siz;
struct node{
    int ls, rs, sum;
}t[maxn &lt;&lt; 5];
void init(){
    cin &gt;&gt; n &gt;&gt; m;
    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i], b[i] = a[i];
    sort(b + 1, b + n + 1);
    siz = unique(b + 1, b + n + 1) - b - 1;
    for (int i = 1; i &lt;= n; i++) a[i] = lower_bound(b + 1, b + siz + 1, a[i]) - b;
}
inline void modify(int&amp; id, int pre, int l, int r, int x){
    id = ++tot;
    t[id] = t[pre];
    t[id].sum++;
    if (l == r) return;
    int mid = (l + r) &gt;&gt; 1;
    if (x &lt;= mid) modify(t[id].ls, t[pre].ls, l, mid, x);
    else modify(t[id].rs, t[pre].rs, mid + 1, r, x);
}
inline int query(int id1, int id2, int l, int r, int k){
    if (l == r) return l;
    int mid = (l + r) &gt;&gt; 1;
    int sum1 = t[t[id1].ls].sum - t[t[id2].ls].sum;
    if (sum1 &gt;= k) return query(t[id1].ls, t[id2].ls, l, mid, k);
    else return query(t[id1].rs, t[id2].rs, mid + 1, r, k - sum1);
}
void build_tree(){
    for (int i = 1; i &lt;= n; i++){
        modify(rt[i], rt[i - 1], 1, siz, a[i]);     // 警钟
    }
}
void work(){
    for (int i = 1; i &lt;= m; i++){
        int l, r, k;
        cin &gt;&gt; l &gt;&gt; r &gt;&gt; k;
        cout &lt;&lt; b[query(rt[r], rt[l - 1], 1, siz, k)] &lt;&lt; &#039;\n&#039;;      
    }
}
signed main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    init();
    build_tree();
    work();
    return 0;
}</code></pre>
<h1>最短路</h1>
<h2>Floyd</h2>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define rep(i, a, b) for(int i = (a); i &lt;= (b); i++)
#define per(i, a, b) for(int i = (a); i &gt;= (b); i--)
using namespace std;
typedef long long ll;
const int N = 500 + 5;
#define int long long

ll a[N][N];
int n, m, q;

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;
    rep(i, 1, n) rep(j, 1, n) a[i][j] = LLONG_MAX;
    for(int i = 1, u, v, w; i &lt;= m; i++) {
        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;
        a[u][v] = a[v][u] = min(a[u][v], w);    //重边处理
    }
    rep(i, 1, n) a[i][i] = 0;               //自己到自己
    rep(k, 1, n) rep(i, 1, n) rep(j ,1 ,n)
        if(a[i][k] != LLONG_MAX &amp;&amp; a[k][j] != LLONG_MAX &amp;&amp; i != k &amp;&amp; j != k)        //ik, jk 不同 
            a[i][j] = min(a[i][j], a[i][k] + a[k][j]);
    for(int i = 1, u, v; i &lt;= q; i++) {
        cin &gt;&gt; u &gt;&gt; v;
        cout &lt;&lt; (a[u][v] == LLONG_MAX ? -1 : a[u][v]) &lt;&lt; &#039;\n&#039;;
    }
    return 0;
}</code></pre>
<h2>Dijkstra</h2>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define rep(i, a, b) for(int i = (a), stOwxc = (b); i &lt;= stOwxc; i++)
#define per(i, a, b) for(int i = (a), stOwxc = (b); i &gt;= stOwxc; i--)
using namespace std;
typedef long long ll;
#define int long long
typedef pair&lt;int, int&gt; pii;
const int N = 1e5 + 5;

int n, m, s = 1;
vector&lt;pii&gt; G[N];
ll dis[N];
bool vis[N];

void Dijkstra() {
    for(int i = 1; i &lt;= n; i++) dis[i] = 1e18;
    priority_queue&lt;pii, vector&lt;pii&gt;, greater&lt;pii&gt;&gt; q;
    dis[s] = 0; 
    q.push({0, s});

    while(!q.empty()) {
        int x = q.top().second; q.pop();
        if(vis[x]) continue;            //vis数组
        vis[x] = true;
        for(auto to : G[x] ){
            if(dis[to.first] &gt; dis[x] + to.second) {
                dis[to.first] = dis[x] + to.second;
                if(!vis[to.first])
                    q.push({dis[to.first], to.first});

            }
        }
    }
}

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;
    for(int i = 1, u, v, w; i &lt;= m; i++) {
        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;
        G[u].push_back({v, w});
    }
    Dijkstra();
    rep(i, 1, n) cout &lt;&lt; dis[i] &lt;&lt; &quot; \n&quot;[i == n];

    return 0;
}</code></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2024/01/27/%e9%94%99%e9%a2%98%e6%9c%ac/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>NOIP2023 模拟赛(2023.11.17)</title>
		<link>https://ggapa.github.io/2023/11/17/noip2023-%e6%a8%a1%e6%8b%9f%e8%b5%9b2023-11-17/</link>
					<comments>https://ggapa.github.io/2023/11/17/noip2023-%e6%a8%a1%e6%8b%9f%e8%b5%9b2023-11-17/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Fri, 17 Nov 2023 07:58:21 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=934</guid>

					<description><![CDATA[]]></description>
										<content:encoded><![CDATA[<p><a href="https://imgse.com/i/pitbdzD"><img decoding="async" src="https://z1.ax1x.com/2023/11/17/pitbdzD.png" alt="pitbdzD.png" /></a></p>
<style><!doctype html>
<html>
<head>
<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>
<title>sol_10(1)</title>
</head>
<body><h2 id='a-简单数学题'>A. 简单数学题</h2>
<h3 id='算法一-1'>算法一</h3>
<p>按照题意模拟分数加减和乘法，期望通过 subtask1(30pts)</p>
<h3 id='算法二-1'>算法二</h3>
<p>对于 subtask2，算法一可能会有两个问题：</p>
<ol start='' >
<li>分数加减时可能会爆 long long</li>
<li>太多次 gcd 可能导致复杂度太高</li>

</ol>
<p>通过适当的改变运算顺序可以解决上述两个问题通过 subtask2(40pts)</p>
<h3 id='算法三-1'>算法三</h3>
<p>对于和我们可以直接用一个变量 sum 记录前 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-84-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-84-TEX-I-1D456"></use></g></g></g></svg></mjx-container><script type="math/tex">i</script> 个元素的和</p>
<p>对于平均值可以直接计算 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="11.797ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5214.2 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-59-TEX-I-1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path><path id="MJX-59-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-59-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-59-TEX-N-73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path id="MJX-59-TEX-N-75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z"></path><path id="MJX-59-TEX-N-6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path id="MJX-59-TEX-N-2061" d=""></path><path id="MJX-59-TEX-N-2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D435" xlink:href="#MJX-59-TEX-I-1D435"></use></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-59-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1363.7,0)"><use data-c="3D" xlink:href="#MJX-59-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(2419.5,0)"><use data-c="73" xlink:href="#MJX-59-TEX-N-73"></use><use data-c="75" xlink:href="#MJX-59-TEX-N-75" transform="translate(394,0)"></use><use data-c="6D" xlink:href="#MJX-59-TEX-N-6D" transform="translate(950,0)"></use></g><g data-mml-node="mo" transform="translate(4202.5,0)"><use data-c="2061" xlink:href="#MJX-59-TEX-N-2061"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4369.2,0)"><g data-mml-node="mo"><use data-c="2F" xlink:href="#MJX-59-TEX-N-2F"></use></g></g><g data-mml-node="mi" transform="translate(4869.2,0)"><use data-c="1D456" xlink:href="#MJX-59-TEX-I-1D456"></use></g></g></g></svg></mjx-container><script type="math/tex">B_i=\operatorname{sum} / i</script> 并输出</p>
<p>对于方差，有 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="60.261ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 26635.3 1799" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -1.469ex;"><defs><path id="MJX-109-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-109-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-109-TEX-SO-2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path><path id="MJX-109-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-109-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-109-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-109-TEX-I-1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path><path id="MJX-109-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-109-TEX-I-1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path><path id="MJX-109-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-109-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-109-TEX-LO-28" d="M180 96T180 250T205 541T266 770T353 944T444 1069T527 1150H555Q561 1144 561 1141Q561 1137 545 1120T504 1072T447 995T386 878T330 721T288 513T272 251Q272 133 280 56Q293 -87 326 -209T399 -405T475 -531T536 -609T561 -640Q561 -643 555 -649H527Q483 -612 443 -568T353 -443T266 -270T205 -41Z"></path><path id="MJX-109-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-109-TEX-LO-29" d="M35 1138Q35 1150 51 1150H56H69Q113 1113 153 1069T243 944T330 771T391 541T416 250T391 -40T330 -270T243 -443T152 -568T69 -649H56Q43 -649 39 -647T35 -637Q65 -607 110 -548Q283 -316 316 56Q324 133 324 251Q324 368 316 445Q278 877 48 1123Q36 1137 35 1138Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><use data-c="31" xlink:href="#MJX-109-TEX-N-31"></use></g><g data-mml-node="mi" transform="translate(274.8,-345) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(960.2,0)"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-109-TEX-SO-2211"></use></g><g data-mml-node="mi" transform="translate(1089,477.1) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D457" xlink:href="#MJX-109-TEX-I-1D457"></use></g><g data-mml-node="mo" transform="translate(412,0)"><use data-c="3D" xlink:href="#MJX-109-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1190,0)"><use data-c="31" xlink:href="#MJX-109-TEX-N-31"></use></g></g></g><g data-mml-node="msup" transform="translate(3460.9,0)"><g data-mml-node="mrow"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-109-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><use data-c="1D434" xlink:href="#MJX-109-TEX-I-1D434"></use></g><g data-mml-node="mi" transform="translate(783,-150) scale(0.707)"><use data-c="1D457" xlink:href="#MJX-109-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(1735.6,0)"><use data-c="2212" xlink:href="#MJX-109-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(2735.8,0)"><g data-mml-node="mi"><use data-c="1D435" xlink:href="#MJX-109-TEX-I-1D435"></use></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(3821.7,0)"><use data-c="29" xlink:href="#MJX-109-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(4243.7,477.1) scale(0.707)"><use data-c="32" xlink:href="#MJX-109-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(8386,0)"><use data-c="3D" xlink:href="#MJX-109-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(9441.7,0)"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><use data-c="31" xlink:href="#MJX-109-TEX-N-31"></use></g><g data-mml-node="mi" transform="translate(274.8,-345) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mrow" transform="translate(10235.3,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><use data-c="28" xlink:href="#MJX-109-TEX-LO-28"></use></g><g data-mml-node="munderover" transform="translate(597,0)"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-109-TEX-SO-2211"></use></g><g data-mml-node="mi" transform="translate(1089,477.1) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D457" xlink:href="#MJX-109-TEX-I-1D457"></use></g><g data-mml-node="mo" transform="translate(412,0)"><use data-c="3D" xlink:href="#MJX-109-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1190,0)"><use data-c="31" xlink:href="#MJX-109-TEX-N-31"></use></g></g></g><g data-mml-node="msubsup" transform="translate(3097.7,0)"><g data-mml-node="mi"><use data-c="1D434" xlink:href="#MJX-109-TEX-I-1D434"></use></g><g data-mml-node="mn" transform="translate(783,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-109-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(783,-284.4) scale(0.707)"><use data-c="1D457" xlink:href="#MJX-109-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(4506.5,0)"><use data-c="2212" xlink:href="#MJX-109-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(5506.7,0)"><use data-c="32" xlink:href="#MJX-109-TEX-N-32"></use></g><g data-mml-node="munderover" transform="translate(6173.3,0)"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-109-TEX-SO-2211"></use></g><g data-mml-node="mi" transform="translate(1089,477.1) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D457" xlink:href="#MJX-109-TEX-I-1D457"></use></g><g data-mml-node="mo" transform="translate(412,0)"><use data-c="3D" xlink:href="#MJX-109-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1190,0)"><use data-c="31" xlink:href="#MJX-109-TEX-N-31"></use></g></g></g><g data-mml-node="msub" transform="translate(8674,0)"><g data-mml-node="mi"><use data-c="1D434" xlink:href="#MJX-109-TEX-I-1D434"></use></g><g data-mml-node="mi" transform="translate(783,-150) scale(0.707)"><use data-c="1D457" xlink:href="#MJX-109-TEX-I-1D457"></use></g></g><g data-mml-node="msub" transform="translate(9798.3,0)"><g data-mml-node="mi"><use data-c="1D435" xlink:href="#MJX-109-TEX-I-1D435"></use></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(11106.5,0)"><use data-c="2B" xlink:href="#MJX-109-TEX-N-2B"></use></g><g data-mml-node="munderover" transform="translate(12106.7,0)"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-109-TEX-SO-2211"></use></g><g data-mml-node="mi" transform="translate(1089,477.1) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D457" xlink:href="#MJX-109-TEX-I-1D457"></use></g><g data-mml-node="mo" transform="translate(412,0)"><use data-c="3D" xlink:href="#MJX-109-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1190,0)"><use data-c="31" xlink:href="#MJX-109-TEX-N-31"></use></g></g></g><g data-mml-node="msubsup" transform="translate(14607.4,0)"><g data-mml-node="mi"><use data-c="1D435" xlink:href="#MJX-109-TEX-I-1D435"></use></g><g data-mml-node="mn" transform="translate(792,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-109-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(792,-284.4) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-109-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(15803,0) translate(0 -0.5)"><use data-c="29" xlink:href="#MJX-109-TEX-LO-29"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\frac{1}{i} \sum_{j=1}^i\left(A_j-B_i\right)^2=\frac{1}{i}\left(\sum_{j=1}^i A_j^2-2 \sum_{j=1}^i A_j B_i+\sum_{j=1}^i B_i^2\right)</script> <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="20.698ex" height="4.07ex" role="img" focusable="false" viewBox="0 -1149.5 9148.6 1799" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -1.469ex;"><defs><path id="MJX-110-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-110-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-110-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-110-TEX-LO-28" d="M180 96T180 250T205 541T266 770T353 944T444 1069T527 1150H555Q561 1144 561 1141Q561 1137 545 1120T504 1072T447 995T386 878T330 721T288 513T272 251Q272 133 280 56Q293 -87 326 -209T399 -405T475 -531T536 -609T561 -640Q561 -643 555 -649H527Q483 -612 443 -568T353 -443T266 -270T205 -41Z"></path><path id="MJX-110-TEX-SO-2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path><path id="MJX-110-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-110-TEX-I-1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path><path id="MJX-110-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-110-TEX-LO-29" d="M35 1138Q35 1150 51 1150H56H69Q113 1113 153 1069T243 944T330 771T391 541T416 250T391 -40T330 -270T243 -443T152 -568T69 -649H56Q43 -649 39 -647T35 -637Q65 -607 110 -548Q283 -316 316 56Q324 133 324 251Q324 368 316 445Q278 877 48 1123Q36 1137 35 1138Z"></path><path id="MJX-110-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-110-TEX-I-1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="3D" xlink:href="#MJX-110-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(1055.8,0)"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><use data-c="31" xlink:href="#MJX-110-TEX-N-31"></use></g><g data-mml-node="mi" transform="translate(274.8,-345) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-110-TEX-I-1D456"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mrow" transform="translate(1849.3,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><use data-c="28" xlink:href="#MJX-110-TEX-LO-28"></use></g><g data-mml-node="munderover" transform="translate(597,0)"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-110-TEX-SO-2211"></use></g><g data-mml-node="mi" transform="translate(1089,477.1) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-110-TEX-I-1D456"></use></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D457" xlink:href="#MJX-110-TEX-I-1D457"></use></g><g data-mml-node="mo" transform="translate(412,0)"><use data-c="3D" xlink:href="#MJX-110-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1190,0)"><use data-c="31" xlink:href="#MJX-110-TEX-N-31"></use></g></g></g><g data-mml-node="msubsup" transform="translate(3097.7,0)"><g data-mml-node="mi"><use data-c="1D434" xlink:href="#MJX-110-TEX-I-1D434"></use></g><g data-mml-node="mn" transform="translate(783,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-110-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(783,-284.4) scale(0.707)"><use data-c="1D457" xlink:href="#MJX-110-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(4284.2,0) translate(0 -0.5)"><use data-c="29" xlink:href="#MJX-110-TEX-LO-29"></use></g></g><g data-mml-node="mo" transform="translate(6952.8,0)"><use data-c="2212" xlink:href="#MJX-110-TEX-N-2212"></use></g><g data-mml-node="msubsup" transform="translate(7953,0)"><g data-mml-node="mi"><use data-c="1D435" xlink:href="#MJX-110-TEX-I-1D435"></use></g><g data-mml-node="mn" transform="translate(792,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-110-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(792,-284.4) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-110-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">=\frac{1}{i}\left(\sum_{j=1}^i A_j^2\right)-B_i^2</script></p>
<p>再记录一个元素表示平方和即可直接计算方差。同时容易发现通过该式计算方差不会导致分子爆 long long。</p>
<h2 id='b-简单算法题'>B. 简单算法题</h2>
<h3 id='算法一-2'>算法一</h3>
<p>暴力还原括号串然后暴力枚举区间判断是否合法，8pts</p>
<h3 id='算法二-2'>算法二</h3>
<p>暴力还原括号串，然后考虑使用数据结构维护。</p>
<p>考虑将 <code>(</code> 视为 1，将 <code>)</code> 视为 -1，做前缀和得到数组 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-98-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-98-TEX-I-1D460"></use></g></g></g></svg></mjx-container><script type="math/tex">s</script>，区间 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="3.959ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1749.7 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-63-TEX-N-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path><path id="MJX-63-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-63-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-63-TEX-I-1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-63-TEX-N-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="5B" xlink:href="#MJX-63-TEX-N-5B"></use></g><g data-mml-node="mi" transform="translate(278,0)"><use data-c="1D459" xlink:href="#MJX-63-TEX-I-1D459"></use></g><g data-mml-node="mo" transform="translate(576,0)"><use data-c="2C" xlink:href="#MJX-63-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1020.7,0)"><use data-c="1D45F" xlink:href="#MJX-63-TEX-I-1D45F"></use></g><g data-mml-node="mo" transform="translate(1471.7,0)"><use data-c="5D" xlink:href="#MJX-63-TEX-N-5D"></use></g></g></g></svg></mjx-container><script type="math/tex">[l, r]</script> 合法当且仅当 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.758ex" height="1.79ex" role="img" focusable="false" viewBox="0 -583 3870.9 791" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.471ex;"><defs><path id="MJX-64-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-64-TEX-I-1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-64-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-64-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-64-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-64-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-64-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D45F" xlink:href="#MJX-64-TEX-I-1D45F"></use></g></g><g data-mml-node="mo" transform="translate(1148.7,0)"><use data-c="3D" xlink:href="#MJX-64-TEX-N-3D"></use></g><g data-mml-node="msub" transform="translate(2204.5,0)"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-64-TEX-I-1D460"></use></g><g data-mml-node="TeXAtom" transform="translate(502,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D459" xlink:href="#MJX-64-TEX-I-1D459"></use></g><g data-mml-node="mo" transform="translate(298,0)"><use data-c="2212" xlink:href="#MJX-64-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1076,0)"><use data-c="31" xlink:href="#MJX-64-TEX-N-31"></use></g></g></g></g></g></svg></mjx-container><script type="math/tex">s_r=s_{l-1}</script> 且对于任意 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="7.903ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3493.2 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-65-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-65-TEX-N-2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path><path id="MJX-65-TEX-N-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path><path id="MJX-65-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-65-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-65-TEX-I-1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-65-TEX-N-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D458" xlink:href="#MJX-65-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(798.8,0)"><use data-c="2208" xlink:href="#MJX-65-TEX-N-2208"></use></g><g data-mml-node="mo" transform="translate(1743.6,0)"><use data-c="5B" xlink:href="#MJX-65-TEX-N-5B"></use></g><g data-mml-node="mi" transform="translate(2021.6,0)"><use data-c="1D459" xlink:href="#MJX-65-TEX-I-1D459"></use></g><g data-mml-node="mo" transform="translate(2319.6,0)"><use data-c="2C" xlink:href="#MJX-65-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(2764.2,0)"><use data-c="1D45F" xlink:href="#MJX-65-TEX-I-1D45F"></use></g><g data-mml-node="mo" transform="translate(3215.2,0)"><use data-c="5D" xlink:href="#MJX-65-TEX-N-5D"></use></g></g></g></svg></mjx-container><script type="math/tex">k \in[l, r]</script>，有 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="7.07ex" height="1.796ex" role="img" focusable="false" viewBox="0 -636 3124.9 793.8" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.357ex;"><defs><path id="MJX-66-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-66-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-66-TEX-N-2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-66-TEX-I-1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-66-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D458" xlink:href="#MJX-66-TEX-I-1D458"></use></g></g><g data-mml-node="mo" transform="translate(1198.2,0)"><use data-c="2265" xlink:href="#MJX-66-TEX-N-2265"></use></g><g data-mml-node="msub" transform="translate(2254,0)"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-66-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D45F" xlink:href="#MJX-66-TEX-I-1D45F"></use></g></g></g></g></svg></mjx-container><script type="math/tex">s_k \geq s_r</script></p>
<p>这意味着如果有 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.73ex" height="1.957ex" role="img" focusable="false" viewBox="0 -661 2090.6 865" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.462ex;"><defs><path id="MJX-67-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-67-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-67-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-67-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(622.8,0)"><use data-c="3C" xlink:href="#MJX-67-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(1678.6,0)"><use data-c="1D457" xlink:href="#MJX-67-TEX-I-1D457"></use></g></g></g></svg></mjx-container><script type="math/tex">i<j</script> 且 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="6.726ex" height="1.887ex" role="img" focusable="false" viewBox="0 -540 2972.8 834.2" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.666ex;"><defs><path id="MJX-68-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-68-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-68-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-68-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-68-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D457" xlink:href="#MJX-68-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(1121.1,0)"><use data-c="3C" xlink:href="#MJX-68-TEX-N-3C"></use></g><g data-mml-node="msub" transform="translate(2176.9,0)"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-68-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-68-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">s_j<s_i</script>，则对于任意 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.128ex" height="2.032ex" role="img" focusable="false" viewBox="0 -694 2266.6 898" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.462ex;"><defs><path id="MJX-69-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-69-TEX-N-2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-69-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D458" xlink:href="#MJX-69-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(798.8,0)"><use data-c="2265" xlink:href="#MJX-69-TEX-N-2265"></use></g><g data-mml-node="mi" transform="translate(1854.6,0)"><use data-c="1D457" xlink:href="#MJX-69-TEX-I-1D457"></use></g></g></g></svg></mjx-container><script type="math/tex">k \geq j</script>，区间 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.223ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1866.7 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-70-TEX-N-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path><path id="MJX-70-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-70-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-70-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-70-TEX-N-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="5B" xlink:href="#MJX-70-TEX-N-5B"></use></g><g data-mml-node="mi" transform="translate(278,0)"><use data-c="1D456" xlink:href="#MJX-70-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(623,0)"><use data-c="2C" xlink:href="#MJX-70-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1067.7,0)"><use data-c="1D458" xlink:href="#MJX-70-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(1588.7,0)"><use data-c="5D" xlink:href="#MJX-70-TEX-N-5D"></use></g></g></g></svg></mjx-container><script type="math/tex">[i, k]</script> 都不合法。所以我们可以尝试用一个栈维护可能合法的左端点。</p>
<p>当加入一个新的元素 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.801ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 796 599.8" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.357ex;"><defs><path id="MJX-77-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-77-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-77-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-77-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">s_i</script> 时，我们只需要弹出栈顶大于 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.801ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 796 599.8" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.357ex;"><defs><path id="MJX-77-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-77-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-77-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-77-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">s_i</script> 的元素然后将等于 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.801ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 796 599.8" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.357ex;"><defs><path id="MJX-77-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-77-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-77-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-77-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">s_i</script> 的元素贡献进答案。</p>
<p>为了保证复杂度我们可以把值相同的元素一起处理。</p>
<p>能过 subtask1,2, 24pts。</p>
<h3 id='算法三-2'>算法三</h3>
<p>对于 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.719ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 760 599.8" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.357ex;"><defs><path id="MJX-74-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-74-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D450" xlink:href="#MJX-74-TEX-I-1D450"></use></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-74-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">c_i</script> 大的情况，可以将枚举左端点所在块和右端点所在块，然后计算中间部分至少要在左侧加几个左括号，至少要在右侧加几个右括号。</p>
<p>复杂度 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="6.555ex" height="2.713ex" role="img" focusable="false" viewBox="0 -849.5 2897.2 1199" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.791ex;"><defs><path id="MJX-75-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-75-TEX-SO-28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path><path id="MJX-75-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-75-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-75-TEX-SO-29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="398" xlink:href="#MJX-75-TEX-N-398"></use></g><g data-mml-node="mrow" transform="translate(944.7,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><use data-c="28" xlink:href="#MJX-75-TEX-SO-28"></use></g><g data-mml-node="msup" transform="translate(458,0)"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-75-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="33" xlink:href="#MJX-75-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(1494.6,0) translate(0 -0.5)"><use data-c="29" xlink:href="#MJX-75-TEX-SO-29"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\Theta\left(n^3\right)</script> 或 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="6.555ex" height="2.713ex" role="img" focusable="false" viewBox="0 -849.5 2897.2 1199" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.791ex;"><defs><path id="MJX-76-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-76-TEX-SO-28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path><path id="MJX-76-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-76-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-76-TEX-SO-29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="398" xlink:href="#MJX-76-TEX-N-398"></use></g><g data-mml-node="mrow" transform="translate(944.7,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><use data-c="28" xlink:href="#MJX-76-TEX-SO-28"></use></g><g data-mml-node="msup" transform="translate(458,0)"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-76-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-76-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(1494.6,0) translate(0 -0.5)"><use data-c="29" xlink:href="#MJX-76-TEX-SO-29"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\Theta\left(n^2\right)</script>。</p>
<p>然后 subtask5 可以随便特判一下，最高可以得56pts。</p>
<h3 id='算法四-1'>算法四</h3>
<p>结合算法二和算法三，把公差为 1 的 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.801ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 796 599.8" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.357ex;"><defs><path id="MJX-77-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-77-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-77-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-77-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">s_i</script> 等差数列合在一起处理。复杂度 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.844ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2141 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-78-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-78-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-78-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-78-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-78-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-78-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152,0)"><use data-c="1D45B" xlink:href="#MJX-78-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1752,0)"><use data-c="29" xlink:href="#MJX-78-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">O(n)</script>，可以 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="3.33ex" height="1.667ex" role="img" focusable="false" viewBox="0 -716 1472 737" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.048ex;"><defs><path id="MJX-103-TEX-N-41" d="M255 0Q240 3 140 3Q48 3 39 0H32V46H47Q119 49 139 88Q140 91 192 245T295 553T348 708Q351 716 366 716H376Q396 715 400 709Q402 707 508 390L617 67Q624 54 636 51T687 46H717V0H708Q699 3 581 3Q458 3 437 0H427V46H440Q510 46 510 64Q510 66 486 138L462 209H229L209 150Q189 91 189 85Q189 72 209 59T259 46H264V0H255ZM447 255L345 557L244 256Q244 255 345 255H447Z"></path><path id="MJX-103-TEX-N-43" d="M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="41" xlink:href="#MJX-103-TEX-N-41"></use><use data-c="43" xlink:href="#MJX-103-TEX-N-43" transform="translate(750,0)"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\mathrm{AC}</script>。</p>
<p>顺便提一下，结合代码可以发现答案不会超过 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="21.422ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 9468.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-80-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-80-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-80-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-80-TEX-N-6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path id="MJX-80-TEX-N-61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path id="MJX-80-TEX-N-78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z"></path><path id="MJX-80-TEX-N-7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path><path id="MJX-80-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-80-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-80-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-80-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-80-TEX-N-7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path><path id="MJX-80-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-80-TEX-I-1D45B"></use></g><g data-mml-node="mrow" transform="translate(766.7,0)"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-80-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(389,0)"><use data-c="1D45B" xlink:href="#MJX-80-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1211.2,0)"><use data-c="2B" xlink:href="#MJX-80-TEX-N-2B"></use></g><g data-mml-node="mo" transform="translate(2211.4,0)"><use data-c="6D" xlink:href="#MJX-80-TEX-N-6D"></use><use data-c="61" xlink:href="#MJX-80-TEX-N-61" transform="translate(833,0)"></use><use data-c="78" xlink:href="#MJX-80-TEX-N-78" transform="translate(1333,0)"></use></g><g data-mml-node="mrow" transform="translate(4239.1,0)"><g data-mml-node="mo"><use data-c="7B" xlink:href="#MJX-80-TEX-N-7B"></use></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><use data-c="1D45A" xlink:href="#MJX-80-TEX-I-1D45A"></use></g><g data-mml-node="mn" transform="translate(911,-150) scale(0.707)"><use data-c="30" xlink:href="#MJX-80-TEX-N-30"></use></g></g><g data-mml-node="mo" transform="translate(1814.6,0)"><use data-c="2C" xlink:href="#MJX-80-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(2259.2,0)"><g data-mml-node="mi"><use data-c="1D45A" xlink:href="#MJX-80-TEX-I-1D45A"></use></g><g data-mml-node="mn" transform="translate(911,-150) scale(0.707)"><use data-c="31" xlink:href="#MJX-80-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(3573.8,0)"><use data-c="7D" xlink:href="#MJX-80-TEX-N-7D"></use></g></g><g data-mml-node="mo" transform="translate(8312.9,0)"><use data-c="29" xlink:href="#MJX-80-TEX-N-29"></use></g></g></g></g></svg></mjx-container><script type="math/tex">n\left(n+\max \left\{m_0, m_1\right\}\right)</script>，所以不会爆 longlong。</p>
<h3 id='其它想法'>其它想法</h3>
<p>可以用线段树之类的方法做到 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.716ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3852.3 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-81-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-81-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-81-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-81-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-81-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-81-TEX-N-2061" d=""></path><path id="MJX-81-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-81-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-81-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152,0)"><use data-c="1D45B" xlink:href="#MJX-81-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1918.7,0)"><use data-c="6C" xlink:href="#MJX-81-TEX-N-6C"></use><use data-c="67" xlink:href="#MJX-81-TEX-N-67" transform="translate(278,0)"></use></g><g data-mml-node="mo" transform="translate(2696.7,0)"><use data-c="2061" xlink:href="#MJX-81-TEX-N-2061"></use></g><g data-mml-node="mi" transform="translate(2863.3,0)"><use data-c="1D45B" xlink:href="#MJX-81-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(3463.3,0)"><use data-c="29" xlink:href="#MJX-81-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">O(n \lg n)</script>，这样会TLE。数据是随机的，说不定随便写个乱搞能过。</p>
<h2 id='c-子序列计数'>C. 子序列计数</h2>
<h3 id='算法一-3'>算法一</h3>
<p>爆搜，能过 subtask1，15pts。</p>
<h3 id='算法二-3'>算法二</h3>
<p>随手写个 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.516ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 1112 888" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.439ex;"><defs><path id="MJX-82-TEX-N-64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z"></path><path id="MJX-82-TEX-N-70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="64" xlink:href="#MJX-82-TEX-N-64"></use><use data-c="70" xlink:href="#MJX-82-TEX-N-70" transform="translate(556,0)"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\mathrm{dp}</script>，比如 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="10.258ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4534 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-83-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-83-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-83-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-83-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-83-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-83-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-83-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path><path id="MJX-83-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D453" xlink:href="#MJX-83-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550,0)"><use data-c="28" xlink:href="#MJX-83-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939,0)"><use data-c="1D456" xlink:href="#MJX-83-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(1284,0)"><use data-c="2C" xlink:href="#MJX-83-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1728.7,0)"><use data-c="1D465" xlink:href="#MJX-83-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(2300.7,0)"><use data-c="2C" xlink:href="#MJX-83-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(2745.3,0)"><use data-c="1D466" xlink:href="#MJX-83-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(3235.3,0)"><use data-c="2C" xlink:href="#MJX-83-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(3680,0)"><use data-c="1D467" xlink:href="#MJX-83-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(4145,0)"><use data-c="29" xlink:href="#MJX-83-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">f(i, x, y, z)</script> 表示决策前 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-84-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-84-TEX-I-1D456"></use></g></g></g></svg></mjx-container><script type="math/tex">i</script> 个元素，最后一个取了 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-100-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-100-TEX-I-1D465"></use></g></g></g></svg></mjx-container><script type="math/tex">x</script>，倒数第二个取了 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.109ex" height="1.464ex" role="img" focusable="false" viewBox="0 -442 490 647" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.464ex;"><defs><path id="MJX-101-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D466" xlink:href="#MJX-101-TEX-I-1D466"></use></g></g></g></svg></mjx-container><script type="math/tex">y</script>，倒数第三个取了 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.052ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 465 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-92-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D467" xlink:href="#MJX-92-TEX-I-1D467"></use></g></g></g></svg></mjx-container><script type="math/tex">z</script>。转移的话如果下一个加进去不合法就不取，否则枚举下一个取不取。</p>
<p>复杂度 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="6.555ex" height="2.713ex" role="img" focusable="false" viewBox="0 -849.5 2897.2 1199" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.791ex;"><defs><path id="MJX-88-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-88-TEX-SO-28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path><path id="MJX-88-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-88-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-88-TEX-SO-29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="398" xlink:href="#MJX-88-TEX-N-398"></use></g><g data-mml-node="mrow" transform="translate(944.7,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><use data-c="28" xlink:href="#MJX-88-TEX-SO-28"></use></g><g data-mml-node="msup" transform="translate(458,0)"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-88-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="34" xlink:href="#MJX-88-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(1494.6,0) translate(0 -0.5)"><use data-c="29" xlink:href="#MJX-88-TEX-SO-29"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\Theta\left(n^4\right)</script>，可以过前两个subtask，35pts。</p>
<h3 id='算法三-3'>算法三</h3>
<p>压缩一下之前的状态，<mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.471ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3744.3 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-89-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-89-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-89-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-89-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-89-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-89-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path><path id="MJX-89-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D453" xlink:href="#MJX-89-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550,0)"><use data-c="28" xlink:href="#MJX-89-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939,0)"><use data-c="1D465" xlink:href="#MJX-89-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(1511,0)"><use data-c="2C" xlink:href="#MJX-89-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1955.7,0)"><use data-c="1D466" xlink:href="#MJX-89-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2445.7,0)"><use data-c="2C" xlink:href="#MJX-89-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(2890.3,0)"><use data-c="1D467" xlink:href="#MJX-89-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(3355.3,0)"><use data-c="29" xlink:href="#MJX-89-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">f(x, y, z)</script> 表示最后一个取的是 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-100-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-100-TEX-I-1D465"></use></g></g></g></svg></mjx-container><script type="math/tex">x</script>，倒数第二个是 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.109ex" height="1.464ex" role="img" focusable="false" viewBox="0 -442 490 647" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.464ex;"><defs><path id="MJX-101-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D466" xlink:href="#MJX-101-TEX-I-1D466"></use></g></g></g></svg></mjx-container><script type="math/tex">y</script>，倒数第三个是 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.052ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 465 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-92-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D467" xlink:href="#MJX-92-TEX-I-1D467"></use></g></g></g></svg></mjx-container><script type="math/tex">z</script> 的方案数。</p>
<p>考虑一般情况，可以有转移：</p>
<div contenteditable="false" spellcheck="false" class="mathjax-block md-end-block md-math-block md-rawblock" id="mathjax-n46" cid="n46" mdtype="math_block" data-math-tag-before="0" data-math-tag-after="0" data-math-labels="[]"><div class="md-rawblock-container md-math-container" tabindex="-1"><mjx-container class="MathJax" jax="SVG" display="true" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="34.571ex" height="5.389ex" role="img" focusable="false" viewBox="0 -950 15280.5 2381.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -3.239ex;" class=""><defs><path id="MJX-55-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-55-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-55-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-55-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-55-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-55-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path><path id="MJX-55-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-55-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-55-TEX-LO-2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path><path id="MJX-55-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-55-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-55-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-55-TEX-N-2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path><path id="MJX-55-TEX-N-2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path><path id="MJX-55-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D453" xlink:href="#MJX-55-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550,0)"><use data-c="28" xlink:href="#MJX-55-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939,0)"><use data-c="1D465" xlink:href="#MJX-55-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(1511,0)"><use data-c="2C" xlink:href="#MJX-55-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1955.7,0)"><use data-c="1D466" xlink:href="#MJX-55-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2445.7,0)"><use data-c="2C" xlink:href="#MJX-55-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(2890.3,0)"><use data-c="1D467" xlink:href="#MJX-55-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(3355.3,0)"><use data-c="29" xlink:href="#MJX-55-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4022.1,0)"><use data-c="3D" xlink:href="#MJX-55-TEX-N-3D"></use></g><g data-mml-node="munder" transform="translate(5077.9,0)"><g data-mml-node="mo" transform="translate(2537.3,0)"><use data-c="2211" xlink:href="#MJX-55-TEX-LO-2211"></use></g><g data-mml-node="TeXAtom" transform="translate(0,-1123.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-55-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(345,0)"><use data-c="3C" xlink:href="#MJX-55-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(1123,0)"><use data-c="1D467" xlink:href="#MJX-55-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(1588,0)"><use data-c="2C" xlink:href="#MJX-55-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1866,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-55-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D465" xlink:href="#MJX-55-TEX-I-1D465"></use></g></g><g data-mml-node="mo" transform="translate(2882.5,0)"><use data-c="2295" xlink:href="#MJX-55-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(3660.5,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-55-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D466" xlink:href="#MJX-55-TEX-I-1D466"></use></g></g><g data-mml-node="mo" transform="translate(4618.9,0)"><use data-c="2295" xlink:href="#MJX-55-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(5396.9,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-55-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D467" xlink:href="#MJX-55-TEX-I-1D467"></use></g></g><g data-mml-node="mo" transform="translate(6337.8,0)"><use data-c="2295" xlink:href="#MJX-55-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(7115.8,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-55-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-55-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(7971.7,0)"><use data-c="2260" xlink:href="#MJX-55-TEX-N-2260"></use></g><g data-mml-node="mi" transform="translate(8749.7,0)"><use data-c="1D460" xlink:href="#MJX-55-TEX-I-1D460"></use></g></g></g><g data-mml-node="mi" transform="translate(11763.2,0)"><use data-c="1D453" xlink:href="#MJX-55-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(12313.2,0)"><use data-c="28" xlink:href="#MJX-55-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(12702.2,0)"><use data-c="1D466" xlink:href="#MJX-55-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(13192.2,0)"><use data-c="2C" xlink:href="#MJX-55-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(13636.8,0)"><use data-c="1D467" xlink:href="#MJX-55-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(14101.8,0)"><use data-c="2C" xlink:href="#MJX-55-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(14546.5,0)"><use data-c="1D456" xlink:href="#MJX-55-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(14891.5,0)"><use data-c="29" xlink:href="#MJX-55-TEX-N-29"></use></g></g></g></svg></mjx-container></div></div>
<p>可以考虑把 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="25.66ex" height="2.814ex" role="img" focusable="false" viewBox="0 -750 11341.6 1243.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -1.117ex;"><defs><path id="MJX-93-TEX-SO-2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path><path id="MJX-93-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-93-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-93-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path><path id="MJX-93-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-93-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-93-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-93-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-93-TEX-N-2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path><path id="MJX-93-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-93-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-93-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-93-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-93-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-93-TEX-SO-2211"></use></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-93-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(345,0)"><use data-c="3C" xlink:href="#MJX-93-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(1123,0)"><use data-c="1D467" xlink:href="#MJX-93-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(1588,0)"><use data-c="2C" xlink:href="#MJX-93-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1866,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-93-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-93-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(2722,0)"><use data-c="3D" xlink:href="#MJX-93-TEX-N-3D"></use></g><g data-mml-node="msub" transform="translate(3500,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-93-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D465" xlink:href="#MJX-93-TEX-I-1D465"></use></g></g><g data-mml-node="mo" transform="translate(4516.4,0)"><use data-c="2295" xlink:href="#MJX-93-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(5294.4,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-93-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D466" xlink:href="#MJX-93-TEX-I-1D466"></use></g></g><g data-mml-node="mo" transform="translate(6252.9,0)"><use data-c="2295" xlink:href="#MJX-93-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(7030.9,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-93-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D467" xlink:href="#MJX-93-TEX-I-1D467"></use></g></g><g data-mml-node="mo" transform="translate(7971.7,0)"><use data-c="2295" xlink:href="#MJX-93-TEX-N-2295"></use></g><g data-mml-node="mi" transform="translate(8749.7,0)"><use data-c="1D460" xlink:href="#MJX-93-TEX-I-1D460"></use></g></g></g><g data-mml-node="mi" transform="translate(7824.3,0)"><use data-c="1D453" xlink:href="#MJX-93-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(8374.3,0)"><use data-c="28" xlink:href="#MJX-93-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(8763.3,0)"><use data-c="1D466" xlink:href="#MJX-93-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(9253.3,0)"><use data-c="2C" xlink:href="#MJX-93-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(9697.9,0)"><use data-c="1D467" xlink:href="#MJX-93-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(10162.9,0)"><use data-c="2C" xlink:href="#MJX-93-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(10607.6,0)"><use data-c="1D456" xlink:href="#MJX-93-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(10952.6,0)"><use data-c="29" xlink:href="#MJX-93-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">\sum_{i<z, a_i=a_x \oplus a_y \oplus a_z \oplus s} f(y, z, i)</script> 的部分用另外一个数组维护一下，即可 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-94-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-94-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-94-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-94-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-94-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-94-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152,0)"><use data-c="31" xlink:href="#MJX-94-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652,0)"><use data-c="29" xlink:href="#MJX-94-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">O(1)</script> 转移。</p>
<p>复杂度 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="13.402ex" height="2.713ex" role="img" focusable="false" viewBox="0 -849.5 5923.5 1199" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.791ex;"><defs><path id="MJX-95-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-95-TEX-SO-28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path><path id="MJX-95-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-95-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-95-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-95-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-95-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-95-TEX-SO-29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="398" xlink:href="#MJX-95-TEX-N-398"></use></g><g data-mml-node="mrow" transform="translate(944.7,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><use data-c="28" xlink:href="#MJX-95-TEX-SO-28"></use></g><g data-mml-node="msup" transform="translate(458,0)"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-95-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="33" xlink:href="#MJX-95-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(1716.8,0)"><use data-c="2B" xlink:href="#MJX-95-TEX-N-2B"></use></g><g data-mml-node="mi" transform="translate(2717,0)"><use data-c="1D45B" xlink:href="#MJX-95-TEX-I-1D45B"></use></g><g data-mml-node="msup" transform="translate(3317,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-95-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><use data-c="1D45A" xlink:href="#MJX-95-TEX-I-1D45A"></use></g></g><g data-mml-node="mo" transform="translate(4520.8,0) translate(0 -0.5)"><use data-c="29" xlink:href="#MJX-95-TEX-SO-29"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\Theta\left(n^3+n 2^m\right)</script>，可以过 subtask1,2,3，60pts。</p>
<h3 id='算法四-2'>算法四</h3>
<p>考虑发掘一些性质，由于 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.937ex" height="1.355ex" role="img" focusable="false" viewBox="0 -441 856 598.8" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.357ex;"><defs><path id="MJX-96-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-96-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-96-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-96-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container><script type="math/tex">a_i</script> 互不相同，所以对于子序列中连续的 5 个元素，如果前四个异或和为 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-98-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-98-TEX-I-1D460"></use></g></g></g></svg></mjx-container><script type="math/tex">s</script>，那么后四个异或和一定不为 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-98-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-98-TEX-I-1D460"></use></g></g></g></svg></mjx-container><script type="math/tex">s</script>。</p>
<p>根据这个性质考虑再次压缩状态：<mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="6.413ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2834.7 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-99-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-99-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-99-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-99-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-99-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-99-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D453" xlink:href="#MJX-99-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550,0)"><use data-c="28" xlink:href="#MJX-99-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939,0)"><use data-c="1D465" xlink:href="#MJX-99-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(1511,0)"><use data-c="2C" xlink:href="#MJX-99-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1955.7,0)"><use data-c="1D466" xlink:href="#MJX-99-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2445.7,0)"><use data-c="29" xlink:href="#MJX-99-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">f(x, y)</script> 表示最后一个取的是 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-100-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-100-TEX-I-1D465"></use></g></g></g></svg></mjx-container><script type="math/tex">x</script>，倒数第二个是 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.109ex" height="1.464ex" role="img" focusable="false" viewBox="0 -442 490 647" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.464ex;"><defs><path id="MJX-101-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D466" xlink:href="#MJX-101-TEX-I-1D466"></use></g></g></g></svg></mjx-container><script type="math/tex">y</script> 的方案数。那么有转移方程：</p>
<div contenteditable="false" spellcheck="false" class="mathjax-block md-end-block md-math-block md-rawblock" id="mathjax-n52" cid="n52" mdtype="math_block" data-math-tag-before="0" data-math-tag-after="0" data-math-labels="[]"><div class="md-rawblock-container md-math-container" tabindex="-1"><mjx-container class="MathJax" jax="SVG" display="true" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="46.563ex" height="7.11ex" role="img" focusable="false" viewBox="0 -1749.5 20580.9 3142.5" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -3.152ex;" class=""><defs><path id="MJX-56-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-56-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-56-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-56-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-56-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-56-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-56-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-56-TEX-LO-2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path><path id="MJX-56-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path><path id="MJX-56-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-56-TEX-S4-28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path><path id="MJX-56-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-56-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-56-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-56-TEX-N-2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path><path id="MJX-56-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-56-TEX-S4-29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D453" xlink:href="#MJX-56-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550,0)"><use data-c="28" xlink:href="#MJX-56-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939,0)"><use data-c="1D465" xlink:href="#MJX-56-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(1511,0)"><use data-c="2C" xlink:href="#MJX-56-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1955.7,0)"><use data-c="1D466" xlink:href="#MJX-56-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2445.7,0)"><use data-c="29" xlink:href="#MJX-56-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3112.4,0)"><use data-c="3D" xlink:href="#MJX-56-TEX-N-3D"></use></g><g data-mml-node="munder" transform="translate(4168.2,0)"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-56-TEX-LO-2211"></use></g><g data-mml-node="TeXAtom" transform="translate(109.3,-1050) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D467" xlink:href="#MJX-56-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(465,0)"><use data-c="3C" xlink:href="#MJX-56-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(1243,0)"><use data-c="1D466" xlink:href="#MJX-56-TEX-I-1D466"></use></g></g></g><g data-mml-node="mrow" transform="translate(5778.9,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><use data-c="28" xlink:href="#MJX-56-TEX-S4-28"></use></g><g data-mml-node="mi" transform="translate(792,0)"><use data-c="1D453" xlink:href="#MJX-56-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(1342,0)"><use data-c="28" xlink:href="#MJX-56-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1731,0)"><use data-c="1D466" xlink:href="#MJX-56-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2221,0)"><use data-c="2C" xlink:href="#MJX-56-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(2665.7,0)"><use data-c="1D467" xlink:href="#MJX-56-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(3130.7,0)"><use data-c="29" xlink:href="#MJX-56-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3741.9,0)"><use data-c="2212" xlink:href="#MJX-56-TEX-N-2212"></use></g><g data-mml-node="munder" transform="translate(4742.1,0)"><g data-mml-node="mo" transform="translate(2537.3,0)"><use data-c="2211" xlink:href="#MJX-56-TEX-LO-2211"></use></g><g data-mml-node="TeXAtom" transform="translate(0,-1084.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-56-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(345,0)"><use data-c="3C" xlink:href="#MJX-56-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(1123,0)"><use data-c="1D467" xlink:href="#MJX-56-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(1588,0)"><use data-c="2C" xlink:href="#MJX-56-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1866,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-56-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D465" xlink:href="#MJX-56-TEX-I-1D465"></use></g></g><g data-mml-node="mo" transform="translate(2882.5,0)"><use data-c="2295" xlink:href="#MJX-56-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(3660.5,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-56-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D466" xlink:href="#MJX-56-TEX-I-1D466"></use></g></g><g data-mml-node="mo" transform="translate(4618.9,0)"><use data-c="2295" xlink:href="#MJX-56-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(5396.9,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-56-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D467" xlink:href="#MJX-56-TEX-I-1D467"></use></g></g><g data-mml-node="mo" transform="translate(6337.8,0)"><use data-c="2295" xlink:href="#MJX-56-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(7115.8,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-56-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-56-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(7971.7,0)"><use data-c="3D" xlink:href="#MJX-56-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(8749.7,0)"><use data-c="1D460" xlink:href="#MJX-56-TEX-I-1D460"></use></g></g></g><g data-mml-node="mi" transform="translate(11427.4,0)"><use data-c="1D453" xlink:href="#MJX-56-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(11977.4,0)"><use data-c="28" xlink:href="#MJX-56-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(12366.4,0)"><use data-c="1D467" xlink:href="#MJX-56-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(12831.4,0)"><use data-c="2C" xlink:href="#MJX-56-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(13276.1,0)"><use data-c="1D456" xlink:href="#MJX-56-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(13621.1,0)"><use data-c="29" xlink:href="#MJX-56-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(14010.1,0) translate(0 -0.5)"><use data-c="29" xlink:href="#MJX-56-TEX-S4-29"></use></g></g></g></g></svg></mjx-container></div></div>
<p>考虑拆一下：</p>
<div contenteditable="false" spellcheck="false" class="mathjax-block md-end-block md-math-block md-rawblock" id="mathjax-n54" cid="n54" mdtype="math_block" data-math-tag-before="0" data-math-tag-after="0" data-math-labels="[]"><div class="md-rawblock-container md-math-container" tabindex="-1"><mjx-container class="MathJax" jax="SVG" display="true" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="45.008ex" height="5.301ex" role="img" focusable="false" viewBox="0 -950 19893.6 2343" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -3.152ex;" class=""><defs><path id="MJX-57-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-57-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-57-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-57-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-57-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-57-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-57-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-57-TEX-LO-2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path><path id="MJX-57-TEX-I-1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path><path id="MJX-57-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-57-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-57-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-57-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-57-TEX-N-2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path><path id="MJX-57-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D453" xlink:href="#MJX-57-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550,0)"><use data-c="28" xlink:href="#MJX-57-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939,0)"><use data-c="1D465" xlink:href="#MJX-57-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(1511,0)"><use data-c="2C" xlink:href="#MJX-57-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1955.7,0)"><use data-c="1D466" xlink:href="#MJX-57-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2445.7,0)"><use data-c="29" xlink:href="#MJX-57-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3112.4,0)"><use data-c="3D" xlink:href="#MJX-57-TEX-N-3D"></use></g><g data-mml-node="munder" transform="translate(4168.2,0)"><g data-mml-node="mo"><use data-c="2211" xlink:href="#MJX-57-TEX-LO-2211"></use></g><g data-mml-node="TeXAtom" transform="translate(109.3,-1050) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D467" xlink:href="#MJX-57-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(465,0)"><use data-c="3C" xlink:href="#MJX-57-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(1243,0)"><use data-c="1D466" xlink:href="#MJX-57-TEX-I-1D466"></use></g></g></g><g data-mml-node="mi" transform="translate(5778.9,0)"><use data-c="1D453" xlink:href="#MJX-57-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(6328.9,0)"><use data-c="28" xlink:href="#MJX-57-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(6717.9,0)"><use data-c="1D466" xlink:href="#MJX-57-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(7207.9,0)"><use data-c="2C" xlink:href="#MJX-57-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(7652.6,0)"><use data-c="1D467" xlink:href="#MJX-57-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(8117.6,0)"><use data-c="29" xlink:href="#MJX-57-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(8728.8,0)"><use data-c="2212" xlink:href="#MJX-57-TEX-N-2212"></use></g><g data-mml-node="munder" transform="translate(9729,0)"><g data-mml-node="mo" transform="translate(2985.6,0)"><use data-c="2211" xlink:href="#MJX-57-TEX-LO-2211"></use></g><g data-mml-node="TeXAtom" transform="translate(0,-1084.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-57-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(345,0)"><use data-c="3C" xlink:href="#MJX-57-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(1123,0)"><use data-c="1D467" xlink:href="#MJX-57-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(1588,0)"><use data-c="3C" xlink:href="#MJX-57-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(2366,0)"><use data-c="1D466" xlink:href="#MJX-57-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2856,0)"><use data-c="2C" xlink:href="#MJX-57-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(3134,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-57-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D456" xlink:href="#MJX-57-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(3990,0)"><use data-c="2295" xlink:href="#MJX-57-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(4768,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-57-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D466" xlink:href="#MJX-57-TEX-I-1D466"></use></g></g><g data-mml-node="mo" transform="translate(5726.4,0)"><use data-c="2295" xlink:href="#MJX-57-TEX-N-2295"></use></g><g data-mml-node="msub" transform="translate(6504.4,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-57-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D467" xlink:href="#MJX-57-TEX-I-1D467"></use></g></g><g data-mml-node="mo" transform="translate(7445.2,0)"><use data-c="2295" xlink:href="#MJX-57-TEX-N-2295"></use></g><g data-mml-node="mi" transform="translate(8223.2,0)"><use data-c="1D460" xlink:href="#MJX-57-TEX-I-1D460"></use></g><g data-mml-node="mo" transform="translate(8692.2,0)"><use data-c="3D" xlink:href="#MJX-57-TEX-N-3D"></use></g><g data-mml-node="msub" transform="translate(9470.2,0)"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-57-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><use data-c="1D465" xlink:href="#MJX-57-TEX-I-1D465"></use></g></g></g></g><g data-mml-node="mi" transform="translate(17310.9,0)"><use data-c="1D453" xlink:href="#MJX-57-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(17860.9,0)"><use data-c="28" xlink:href="#MJX-57-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(18249.9,0)"><use data-c="1D467" xlink:href="#MJX-57-TEX-I-1D467"></use></g><g data-mml-node="mo" transform="translate(18714.9,0)"><use data-c="2C" xlink:href="#MJX-57-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(19159.6,0)"><use data-c="1D456" xlink:href="#MJX-57-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(19504.6,0)"><use data-c="29" xlink:href="#MJX-57-TEX-N-29"></use></g></g></g></svg></mjx-container></div></div>
<p>两部分都可以拿个数组维护一下，复杂度 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="14.239ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6293.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-102-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-102-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-102-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-102-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-102-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-102-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-102-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="398" xlink:href="#MJX-102-TEX-N-398"></use></g><g data-mml-node="mrow" transform="translate(944.7,0)"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-102-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(389,0)"><use data-c="1D45B" xlink:href="#MJX-102-TEX-I-1D45B"></use></g><g data-mml-node="mrow" transform="translate(1155.7,0)"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-102-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(389,0)"><use data-c="1D45B" xlink:href="#MJX-102-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1211.2,0)"><use data-c="2B" xlink:href="#MJX-102-TEX-N-2B"></use></g><g data-mml-node="msup" transform="translate(2211.4,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-102-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><use data-c="1D45A" xlink:href="#MJX-102-TEX-I-1D45A"></use></g></g><g data-mml-node="mo" transform="translate(3415.3,0)"><use data-c="29" xlink:href="#MJX-102-TEX-N-29"></use></g></g><g data-mml-node="mo" transform="translate(4960,0)"><use data-c="29" xlink:href="#MJX-102-TEX-N-29"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\Theta\left(n\left(n+2^m\right)\right)</script>，可以 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="3.33ex" height="1.667ex" role="img" focusable="false" viewBox="0 -716 1472 737" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.048ex;"><defs><path id="MJX-103-TEX-N-41" d="M255 0Q240 3 140 3Q48 3 39 0H32V46H47Q119 49 139 88Q140 91 192 245T295 553T348 708Q351 716 366 716H376Q396 715 400 709Q402 707 508 390L617 67Q624 54 636 51T687 46H717V0H708Q699 3 581 3Q458 3 437 0H427V46H440Q510 46 510 64Q510 66 486 138L462 209H229L209 150Q189 91 189 85Q189 72 209 59T259 46H264V0H255ZM447 255L345 557L244 256Q244 255 345 255H447Z"></path><path id="MJX-103-TEX-N-43" d="M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="41" xlink:href="#MJX-103-TEX-N-41"></use><use data-c="43" xlink:href="#MJX-103-TEX-N-43" transform="translate(750,0)"></use></g></g></g></g></svg></mjx-container><script type="math/tex">\mathrm{AC}</script>。</p>
<h2 id='d-邮递员'>D. 邮递员</h2>
<p>首先，当 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.498ex" height="1.946ex" role="img" focusable="false" viewBox="0 -666 3756.2 860" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.439ex;"><defs><path id="MJX-104-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-104-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-104-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-104-TEX-N-2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-104-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-104-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600,0)"><use data-c="2C" xlink:href="#MJX-104-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1044.7,0)"><use data-c="1D45A" xlink:href="#MJX-104-TEX-I-1D45A"></use></g><g data-mml-node="mo" transform="translate(2200.4,0)"><use data-c="2264" xlink:href="#MJX-104-TEX-N-2264"></use></g><g data-mml-node="mn" transform="translate(3256.2,0)"><use data-c="36" xlink:href="#MJX-104-TEX-N-36"></use></g></g></g></svg></mjx-container><script type="math/tex">n, m \leq 6</script> 时，我们爆搜出所有合法的解。接下来，不妨设 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="14.469ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6395.2 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-105-TEX-N-6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path id="MJX-105-TEX-N-61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path id="MJX-105-TEX-N-78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z"></path><path id="MJX-105-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-105-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-105-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-105-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-105-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-105-TEX-N-3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path><path id="MJX-105-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="6D" xlink:href="#MJX-105-TEX-N-6D"></use><use data-c="61" xlink:href="#MJX-105-TEX-N-61" transform="translate(833,0)"></use><use data-c="78" xlink:href="#MJX-105-TEX-N-78" transform="translate(1333,0)"></use></g><g data-mml-node="mo" transform="translate(1861,0)"><use data-c="28" xlink:href="#MJX-105-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2250,0)"><use data-c="1D45B" xlink:href="#MJX-105-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2850,0)"><use data-c="2C" xlink:href="#MJX-105-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(3294.7,0)"><use data-c="1D45A" xlink:href="#MJX-105-TEX-I-1D45A"></use></g><g data-mml-node="mo" transform="translate(4172.7,0)"><use data-c="29" xlink:href="#MJX-105-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4839.4,0)"><use data-c="3E" xlink:href="#MJX-105-TEX-N-3E"></use></g><g data-mml-node="mn" transform="translate(5895.2,0)"><use data-c="36" xlink:href="#MJX-105-TEX-N-36"></use></g></g></g></svg></mjx-container><script type="math/tex">\max (n, m)>6</script>。</p>
<p>若行数大于 6，且最顶部两行中不包含起点与终点，则我们可以直接删除顶端两行，并将得到的合法方案进行拼接即可：</p>
<p><img src="road.png" referrerpolicy="no-referrer"></p>
<p>同样地，若最左侧、最右侧、最底侧不包含起点与终点，我们同样可以进行上述操作。而当起点与终点位于这些区域时，由于 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="14.469ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6395.2 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-106-TEX-N-6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path id="MJX-106-TEX-N-61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path id="MJX-106-TEX-N-78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z"></path><path id="MJX-106-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-106-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-106-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-106-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-106-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-106-TEX-N-2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-106-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="6D" xlink:href="#MJX-106-TEX-N-6D"></use><use data-c="61" xlink:href="#MJX-106-TEX-N-61" transform="translate(833,0)"></use><use data-c="78" xlink:href="#MJX-106-TEX-N-78" transform="translate(1333,0)"></use></g><g data-mml-node="mo" transform="translate(1861,0)"><use data-c="28" xlink:href="#MJX-106-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2250,0)"><use data-c="1D45B" xlink:href="#MJX-106-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2850,0)"><use data-c="2C" xlink:href="#MJX-106-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(3294.7,0)"><use data-c="1D45A" xlink:href="#MJX-106-TEX-I-1D45A"></use></g><g data-mml-node="mo" transform="translate(4172.7,0)"><use data-c="29" xlink:href="#MJX-106-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4839.4,0)"><use data-c="2264" xlink:href="#MJX-106-TEX-N-2264"></use></g><g data-mml-node="mn" transform="translate(5895.2,0)"><use data-c="36" xlink:href="#MJX-106-TEX-N-36"></use></g></g></g></svg></mjx-container><script type="math/tex">\max (n, m) \leq 6</script>，因此必有两行只包含了起点或终点，我们同样进行调整，得到新的起点后删除上述两行即可。</p>
<p>可以证明，只要步数的奇偶性正确，在 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.498ex" height="1.971ex" role="img" focusable="false" viewBox="0 -677 3756.2 871" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.439ex;"><defs><path id="MJX-107-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-107-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-107-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-107-TEX-N-2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-107-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-107-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600,0)"><use data-c="2C" xlink:href="#MJX-107-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1044.7,0)"><use data-c="1D45A" xlink:href="#MJX-107-TEX-I-1D45A"></use></g><g data-mml-node="mo" transform="translate(2200.4,0)"><use data-c="2265" xlink:href="#MJX-107-TEX-N-2265"></use></g><g data-mml-node="mn" transform="translate(3256.2,0)"><use data-c="34" xlink:href="#MJX-107-TEX-N-34"></use></g></g></g></svg></mjx-container><script type="math/tex">n, m \geq 4</script> 时一定有解，因此我们通过上述操作后一定能得到合法的解。</p>
<p>时间复杂度为 <mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="7.195ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3180 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-108-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-108-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-108-TEX-N-A0" d=""></path><path id="MJX-108-TEX-N-6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path id="MJX-108-TEX-N-6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path id="MJX-108-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-108-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-108-TEX-N-28"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1152,0)"><g data-mml-node="mtext"><use data-c="A0" xlink:href="#MJX-108-TEX-N-A0"></use></g><g data-mml-node="mi" transform="translate(250,0)"><use data-c="6E" xlink:href="#MJX-108-TEX-N-6E"></use><use data-c="6D" xlink:href="#MJX-108-TEX-N-6D" transform="translate(556,0)"></use></g></g><g data-mml-node="mo" transform="translate(2791,0)"><use data-c="29" xlink:href="#MJX-108-TEX-N-29"></use></g></g></g></svg></mjx-container><script type="math/tex">O(\mathrm{~nm})</script>。</p>
</body>
</html></style>]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2023/11/17/noip2023-%e6%a8%a1%e6%8b%9f%e8%b5%9b2023-11-17/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>NOIP2023 模拟赛(2023.11.14)</title>
		<link>https://ggapa.github.io/2023/11/15/noip2023-%e6%a8%a1%e6%8b%9f%e8%b5%9b2023-11-14/</link>
					<comments>https://ggapa.github.io/2023/11/15/noip2023-%e6%a8%a1%e6%8b%9f%e8%b5%9b2023-11-14/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Wed, 15 Nov 2023 12:28:03 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=911</guid>

					<description><![CDATA[${\color{Red} \mathrm{写的很垃圾，待补充} } $ Update on 2023.11. [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>${\color{Red} \mathrm{写的很垃圾，待补充} } $<br />
Update on 2023.11.17 修改笔误，补充内容。</p>
<h1><a href="http://47.94.97.204/contest/351/problem/1">T1</a></h1>
<p><a href="https://imgse.com/i/piYOWCV"><img decoding="async" src="https://z1.ax1x.com/2023/11/16/piYOWCV.png" alt="piYOWCV.png" /></a></p>
<h5>题目大意</h5>
<p>求 $m!$ 在模 $p$ 下的值，保证 $p$ 是素数。</p>
<h5>分析与解答</h5>
<p>考点：威尔逊定理。</p>
<p>由威尔逊定理可知，若 $p$ 为素数，则有$(p-1)! \equiv p-1\pmod{p}$。</p>
<p>可通过以上定理得 $(p-1)! \pmod{p}$  的值。</p>
<p>若 $m \ge p$，结果为  $0$。</p>
<p>若 $m &lt; p$，题目中让我们求的是：</p>
<p>$$\prod_{1}^{m} \pmod{p}$$</p>
<p>但我们已知：</p>
<p>$$\prod_{1}^{p - 1} \pmod{p}$$</p>
<p>所以就需要乘上以下式子，来删去多余的部分。</p>
<p>$$\prod_{i=m+1}^{p-1} i^{-1} \pmod{p}$$</p>
<p>最终的答案为：</p>
<p>$$(p-1) \times \prod_{i=m+1}^{p-1} i^{-1} \pmod{p}$$</p>
<p>求逆元可通过费马小定理实现。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
long long qpow(long long a, long long b, long long p) {
    long long ans = 1;
    while (b) {
        if (b &amp; 1)
            ans = ans * a % p;
        a = a * a % p;
        b &gt;&gt;= 1;
    }
    return ans;
}
int main() {
    freopen(&quot;factorial.in&quot;, &quot;r&quot;, stdin);
    freopen(&quot;factorial.out&quot;, &quot;w&quot;, stdout);
    cin.tie(0)-&gt;sync_with_stdio(0);
    int T;
    cin &gt;&gt; T;
    while (T--) {
        long long m, p;
        cin &gt;&gt; m &gt;&gt; p;
        if (m &gt;= p)
            cout &lt;&lt; 0 &lt;&lt; &#039;\n&#039;;
        else {
            long long ans = p - 1;
            for (long long i = p - 1; i &gt; m; i--) ans = 1ll * ans * qpow(i, p - 2, p) % p;
            cout &lt;&lt; ans &lt;&lt; &#039;\n&#039;;
        }
    }
    return 0;
}</code></pre>
<h1><a href="http://47.94.97.204/contest/351/problem/2">T2</a></h1>
<p><a href="https://imgse.com/i/piYOHER"><img decoding="async" src="https://z1.ax1x.com/2023/11/16/piYOHER.png" alt="piYOHER.png" /></a></p>
<h5>题目大意</h5>
<h5>分析与解答</h5>
<p>考点：分块</p>
<p>这道题的 做法很多。</p>
<p>考虑建立反图，用线段树优化。</p>
<p>对于每一个点构建全局线段树，在连边的时候由更大的节点向更小的节点连边。但每个点连出的边是 $O(\log n)$ 的，再跑一遍最短路，整体时间复杂度变为 $O(n \log^2 n)$ 不能通过这道题目。</p>
<p>因为每条边的边权可以定为 $1$ ，每个点在第一次达到时直接扔进队列里，故可不用优先队列完成这道题。时间复杂度 $O(n\log n)$，理论上不能通过此题。写的优秀可以得 86pts。</p>
<p>发现不能再通过线段树进行优化，考虑在构建返图时不连那么多边来优化程序。发现 $(n-L+R) \times d^{-1}$ 就可以得到我们所需要的点。例如 :<br />
$$n = 10,d = 4, \gcd(n, d) = 2，L=1,R=3$$<br />
没有必要一次性把图全部构建出来，因为构建出来就已经爆了。</p>
<p><!--不会了--></p>
<h1><a href="http://47.94.97.204/contest/351/problem/3">T3</a></h1>
<p><a href="https://imgse.com/i/piYOhgU"><img decoding="async" src="https://z1.ax1x.com/2023/11/16/piYOhgU.png" alt="piYOhgU.png" /></a></p>
<h5>分析与解答</h5>
<p>考点： 整体二分</p>
<p>莫队部分分，背包合并部分分</p>
<p>需要进行离线操作，并且把每一种询问都扯上关系，背包合并不行。</p>
<p>考虑整体二分和分治。</p>
<p>对于每一个背包做前缀最大值处理，后缀也处理了，可以 $O(m)$ 查询，后使用整体二分。</p>
<h1><a href="http://47.94.97.204/contest/351/problem/4">T4</a></h1>
<p><a href="https://imgse.com/i/piYO4vF"><img decoding="async" src="https://z1.ax1x.com/2023/11/16/piYO4vF.png" alt="piYO4vF.png" /></a></p>
<h5>分析与解答</h5>
<p>考点：最小生成树的理解。（容斥原理？）</p>
<p>当 $m = n - 1$ 时，每一条道路都是需要取，利用贪心排序后枚举每一条边的长度即可通过一部分分。准确证明不会。树边均可这样操作。将这个方法衍生到非树边，也是因该边权从小到大加。</p>
<p>还是先进行排序，但是在选择的时候需要注意之前已经被选过的情况，，然后，然后就做出来了。</p>
<h1>总结</h1>
<ul>
<li>对于乘法逆元的运用还是不熟悉</li>
<li>第四题虽然有思路，而且是正解，但是没有实现出来，码力太弱。</li>
<li>每道题还是要先打一下暴力再去做正解。</li>
<li>注意部分分推广</li>
</ul>
<hr />
<h1>题解</h1>
<h2>A. 虫群之心</h2>
<p>威尔逊定理板子题，注意题目条件。</p>
<h2>B. 喝醉的兔子</h2>
<h3>算法一</h3>
<p>对于subtask1，过程唯一，可以直接暴力。 </p>
<h3>算法二</h3>
<p>令 $f_i$ 表示模 $n$ 余 $i$ 时的最少步数，考虑建图。</p>
<p>对于 $L = R$ 的点边数不多，bfs 一遍即可。能过 subtask1, 2, 5。</p>
<h3>算法三</h3>
<p>考虑 $L\neq R$ 时的建图，可以用线段树之类的优化建图。</p>
<p>最后再用单调队列之类的方法做一下即可。 </p>
<p>复杂度差不多是 $O(T (n \lg n + q))$</p>
<p>能过 subtask1, 2, 3, 4，或许能过 subtask5, 6。</p>
<h3>算法四</h3>
<p>考虑维护 $g<em>i = \min</em>{0\le j\le R−L}\ f_{(i+j)} \mod\ n$，建图 bfs，可以优化常数，降低代码复杂度。</p>
<p>然后可以再用线段树之类的优化建图。</p>
<h3>算法五</h3>
<p>考虑 bfs 的过程，每个点第一次被遍历到的时候它的最终答案就确定了。</p>
<p>所以我们只需要每次考虑在一段区间内把所有未标记的节点找出来即可。</p>
<p>相当于删点查后继，使用 set 即可。</p>
<p>复杂度和算法三类似。</p>
<h3>算法六</h3>
<p>对于删点查后继问题，可以使用并查集或者类似四毛子的方法维护。</p>
<p>复杂度 $O(Tn\alpha(n))$ 或 $O(Tn)$。</p>
<p>注意一下常数就能AC。</p>
<h3>算法七</h3>
<p>沿着算法五的思路，给序列分块，$R-L$ 个一块，容易发现每个块内任意时刻都是一个前缀和一个后缀被删除。所以只需要给每个块定两个指针。修改只会涉及到 $O(1)$ 个块。每个块单独维护一下即可。</p>
<p>复杂度 $O(Tn)$，能AC。</p>
<h3>算法八</h3>
<p>回到优化建图的思路上来，再结合一下算法七。可以得到一个 $O(Tn)$ 的优化建图的做法。</p>
<p>注意下常数能AC。</p>
<h3>其它想法</h3>
<p>如果这个题改成求最优解概率，仍然可以扩展算法八的做法解决。但使用算法六或算法七的方法似乎不太可行。</p>
<h2>C. 盲盒流水线</h2>
<h3>算法一</h3>
<p>直接暴搜。</p>
<p>可以过掉 subtask1，15分。</p>
<h3>算法二</h3>
<p>每次暴力dp，复杂度 $O(qnm)$。</p>
<h3>算法三</h3>
<p>考虑到合并两个背包复杂度为 $O(m^2)$。</p>
<p>所以用线段树之类的数据结构维护可以做到 $O(nm^2 + qm^2\lg n)$。</p>
<h3>算法四</h3>
<p>我们有两种背包的操作可以做到复杂度 $O(m)$：一种是往背包里加入一个元素，一种是询问两个背包合并后价格总和不超过某个定值的答案。</p>
<p>我们可以考虑分治，对于一段背包的区间 $[l, r]$，如果足够小，我们可以暴力所有的询问。</p>
<p>否则可以取中点 $mid = \lfloor \frac{l+r}2\rfloor$，从 $mid$ 往两边分别做前缀/后缀背包，那么此时每个过中点的询问可以视为两个已处理出来的背包合并后询问价格总和不超过 $m$ 的答案，可以直接 $O(m)$ 解决。</p>
<p>那么此时没有过中点的询问，所以可以分治解决 $[l, m]$ 和 $[m + 1, r]$。</p>
<p>复杂度 $O(nm \lg n + qm)$，100分。</p>
<h2>D. 失落的帝国</h2>
<p>当 $m=n-1$ 时，问题转化成有 $m$ 个变量，第 $i$ 变量的取值为 $\left[l_i, r_i\right]$，且任意两个变量不相等，构造一组方案。我们可以将所有区间按照左端点排序，随后扫 $l_i$ 时贪心的选择 $r_i$ 最小的来放置。</p>
<p>当 $m&gt;n-1$ 时，每条非树边会有额外的限制：非树边 $(u, v)$ 的长度必须严格大于路径 $u \rightarrow v$ 的长度最小值。因此，对于一条非树边，我们只有在这条路径上所有的边均被赋值后，才可以赋非树边的值。因此我们仍然按照 $l_i$ 排序，但在合并两个联通块时，更新这一轮所联通的非树边，如果一个非树边的两端点联通，则将其加入堆中即可。</p>
<p>总的时间复杂度为 $O\left((n+m) \log ^2 n\right)$ 或 $O((n+m) \log n)$ 。</p>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2023/11/15/noip2023-%e6%a8%a1%e6%8b%9f%e8%b5%9b2023-11-14/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>CSP-S 2023 代码</title>
		<link>https://ggapa.github.io/2023/11/15/csp-s-2023-%e4%bb%a3%e7%a0%81/</link>
					<comments>https://ggapa.github.io/2023/11/15/csp-s-2023-%e4%bb%a3%e7%a0%81/#respond</comments>
		
		<dc:creator><![CDATA[GGapa]]></dc:creator>
		<pubDate>Wed, 15 Nov 2023 10:53:25 +0000</pubDate>
				<category><![CDATA[OI]]></category>
		<guid isPermaLink="false">https://ggapa.github.io/?p=908</guid>

					<description><![CDATA[T1 密码锁 // CSP-S 2023 密码锁 #include &#60;bits/stdc++.h&#62; [&#8230;]]]></description>
										<content:encoded><![CDATA[<h1>T1 密码锁</h1>
<pre><code class="language-cpp">// CSP-S 2023 密码锁
#include &lt;bits/stdc++.h&gt;
using namespace std;
using VI = vector&lt;int&gt;;
int main() {
#ifdef ONLINE_JUDGE
  freopen(&quot;lock.in&quot;, &quot;r&quot;, stdin);
  freopen(&quot;lock.out&quot;, &quot;w&quot;, stdout);
#endif
  int n;
  cin &gt;&gt; n;
  set&lt;VI&gt; AS;      // 输入的n种状态
  map&lt;VI, int&gt; M;  // 可能的一些来源状态
  VI A(5), B;
  for (int i = 0; i &lt; n; i++) {
    for (int&amp; a : A) cin &gt;&gt; a;
    AS.insert(A);
    for (int i = 0; i &lt; 5; i++)       // 转动的起点
      for (int k = 1; k &lt;= 9; k++) {  // 转动的幅度
        B = A;
        (B[i] += k) %= 10, M[B]++;                     // [i,i] += k
        if (i + 1 &lt; 5) (B[i + 1] += k) %= 10, M[B]++;  // [i,i+1] += k;
      }
  }
  int ans = 0;
  for (auto p : M) ans += (!AS.count(p.first) and p.second == n);
  return printf(&quot;%d\n&quot;, ans), 0;
}
// AC 100</code></pre>
<h1>T2 消消乐</h1>
<h2>90分代码</h2>
<pre><code class="language-cpp">// CSP-S 2023 密码锁
#include &lt;bits/stdc++.h&gt;
using namespace std;
using LL = long long;
int main() {
#ifdef ONLINE_JUDGE
  freopen(&quot;game.in&quot;, &quot;r&quot;, stdin);
  freopen(&quot;game.out&quot;, &quot;w&quot;, stdout);
#endif
  int n;
  string A;
  cin &gt;&gt; n &gt;&gt; A;
  string stk;
  unordered_map&lt;string, int&gt; SM{{stk, 1}};
  LL ans = 0;
  for (char c : A) {
    if (!stk.empty() and stk.back() == c)
      stk.pop_back();
    else
      stk += c;
    ans += SM[stk], SM[stk]++;
  }
  return printf(&quot;%lld\n&quot;, ans), 0;
}
// AC 90</code></pre>
<h2>100分代码</h2>
<pre><code class="language-cpp">// CSP-S 2023 消消乐
#include &lt;bits/stdc++.h&gt;
using namespace std;
using LL = long long;
int main() {
#ifdef ONLINE_JUDGE
  freopen(&quot;game.in&quot;, &quot;r&quot;, stdin);
  freopen(&quot;game.out&quot;, &quot;w&quot;, stdout);
#endif
  int n;
  string A;
  cin &gt;&gt; n &gt;&gt; A;
  string stk;
  using ULL = unsigned long long;
  vector&lt;ULL&gt; R(n + 1);
  ULL P = 1e9 + 7;
  R[0] = 1;
  for (int i = 1; i &lt;= n; i++) R[i] = R[i - 1] * P;  // Pⁱ
  unordered_map&lt;ULL, int&gt; HM{{0, 1}};  // 所有前缀消除之后的hash
  LL ans = 0, h = 0;
  for (char c : A) {
    if (!stk.empty() and stk.back() == c)      // 栈顶可以消除
      stk.pop_back(), h -= c * R[stk.size()];  // 消除并更新hash
    else
      h += c * R[stk.size()], stk += c;  // 入栈并更新hash
    ans += HM[h], HM[h]++;  // 更新区间个数，记录栈的状态
  }
  return printf(&quot;%lld\n&quot;, ans), 0;
}
// AC 100</code></pre>
<h1>T3 结构体</h1>
<pre><code class="language-cpp">// CSP-S 2023 结构体
#include &lt;bits/stdc++.h&gt;
using namespace std;
using LL = long long;
struct STInfo;
// 基础类型及其长度
map&lt;string, int&gt; MT{{&quot;byte&quot;, 1}, {&quot;short&quot;, 2}, {&quot;int&quot;, 4}, {&quot;long&quot;, 8}};
vector&lt;STInfo&gt; Ts;        // 所有的类型
map&lt;string, int&gt; TIDs;    // 类型名:id
struct STInfo {           // 结构体信息
  string name;            // 类型名
  LL align, size;         // 对齐要求, 大小
  vector&lt;int&gt; mTypes;     // 成员类型
  vector&lt;string&gt; mNames;  // 成员名称
  map&lt;string, int&gt; mId;   // 成员名称:编号
  vector&lt;LL&gt; m_st, m_ed;  // 每个成员占用内存的起始和结束地址
  STInfo() : align(0), size(0) {}
  void add_var(const string&amp; t, const string&amp; n) {  // 增加一个类型为t的成员n
    assert(TIDs.count(t));     // 类型t必须已经存在
    int ti = TIDs[t];
    auto&amp; mt = Ts[ti];
    align = max(align, mt.align);  // 对齐要求等于其成员的对齐要求的最大值
    mId[n] = mNames.size();    // 成员名称对应的编号
    mNames.push_back(n), mTypes.push_back(ti);  // 成员名称类型
    LL st = m_ed.empty() ? 0 : m_ed.back();     // 新变量的起点
    while (st % mt.align) ++st;   // 起点要考虑对齐
    LL ed = st + mt.size;   // 终点不用考虑对齐
    m_st.push_back(st), m_ed.push_back(ed), size = ed;
    while (size % align) ++size;  // 整体大小考虑对齐
  }
  LL mem_addr(const string&amp; m) const {  // 成员m的地址
    return m_st.at(mId.at(m));
  }
  int mem_type(const string&amp; m) const {  // 成员m的类型
    return mTypes.at(mId.at(m));
  }
  int mid_of_addr(LL a) const {
    assert(a &gt;= 0);
    int msz = m_st.size();  // 看看哪个成员包含了这个地址, 数据量不大
    for (int i = 0; i &lt; msz; ++i)
      if (m_st[i] &lt;= a &amp;&amp; a &lt; m_ed[i]) return i;
    return -1;
  }
};
STInfo G;    // 全局看做一个大结构体
void init() {      // 基础类型初始化
  for (auto p : MT) {  // byte，short，int，long
    string s = p.first;
    // 对于基本类型：对齐要求等于其占据空间大小, 并且没有成员
    STInfo si;
    si.name = s, si.align = MT[s], si.size = MT[s];
    si.m_st.push_back(0), si.m_ed.push_back(MT[s]);
    TIDs[s] = Ts.size(), Ts.push_back(si);
  }
  G.name = &quot;root&quot;;
}
// 读入并添加一个类型
const STInfo&amp; add_type() {
  int k;
  STInfo si;
  cin &gt;&gt; si.name &gt;&gt; k;  // 示类型名与成员数量，
  for (string t, n; k--;) cin &gt;&gt; t &gt;&gt; n, si.add_var(t, n);  // 添加成员
  TIDs[si.name] = Ts.size(), Ts.push_back(si);
  return Ts.back();
}
// 所有被定义的元素将按顺序，从内存地址为0开始依次排开
LL def_var(const string&amp; type, const string&amp; name) {
  return G.add_var(type, name), G.m_st.back();
}
// 如a.b.c，需要输出如上被访问的最内层元素的起始地址。
LL find_addr(string v) {
  replace(begin(v), end(v), &#039;.&#039;, &#039; &#039;);
  stringstream ss(v);
  vector&lt;string&gt; ns;
  for (string s; ss &gt;&gt; s; ns.push_back(s))
    ;
  assert(!ns.empty());
  LL a = G.mem_addr(ns[0]);  // 起始地址
  for (int i = 1, ti = G.mem_type(ns[0]); i &lt; (int)ns.size(); i++) {
    a += Ts[ti].mem_addr(ns[i]);  // 成员的内存中的起始位置(偏移量)
    ti = Ts[ti].mem_type(ns[i]);  // 成员的类型, 进入下一级
  }
  return a;
}
string addr_type_name(LL a) {  // 找到addr对应的变量类型
  string s, er = &quot;ERR&quot;;
  int mi = G.mid_of_addr(a);
  if (mi == -1) return er;
  s += G.mNames[mi], a -= G.m_st[mi];  // 进入下一级
  for (int ti = G.mTypes[mi]; !MT.count(Ts[ti].name);) {
    const auto&amp; tp = Ts[ti];
    mi = tp.mid_of_addr(a);
    if (mi == -1) return er;
    s += &#039;.&#039; + tp.mNames[mi], a -= tp.m_st[mi], ti = tp.mTypes[mi];
  }
  return s;
}
int main() {
#ifdef ONLINE_JUDGE
  freopen(&quot;struct.in&quot;, &quot;r&quot;, stdin);
  freopen(&quot;struct.out&quot;, &quot;w&quot;, stdout);
#endif
  init();
  int T;
  cin &gt;&gt; T;
  string t, n, s;
  LL addr;
  for (int i = 0, op; i &lt; T; i++) {
    cin &gt;&gt; op;
    if (op == 1) {
      const STInfo&amp; tp = add_type();
      printf(&quot;%lld %lld\n&quot;, tp.size, tp.align);
    } else if (op == 2)  // 该元素的类型与名称
      cin &gt;&gt; t &gt;&gt; n, printf(&quot;%lld\n&quot;, def_var(t, n));
    else if (op == 3)
      cin &gt;&gt; s, printf(&quot;%lld\n&quot;, find_addr(s));
    else if (op == 4)
    cin &gt;&gt; addr, puts(addr_type_name(addr).c_str());
  }
  return 0;
}
// AC 100</code></pre>
<h1>T4 种树</h1>
<pre><code class="language-cpp">// CSPS-2023 种树
#include &lt;bits/stdc++.h&gt;
using namespace std;
using LL = long long;
const int NN = 1e5 + 4;
LL A[NN], B[NN], C[NN];
int N, F[NN];  // F[i] 表示i这个点最晚种树的天数
vector&lt;int&gt; G[NN];
void dfs(int u, int fa) {
  for (auto v : G[u])  // v一定比父亲u晚一天种
    if (v != fa) dfs(v, u), F[u] = min(F[u], F[v] - 1);
}
using BI = __int128;
// 要求点i在t天后达到目标(≥aᵢ)，必须在第f天前开始种，返回f
LL solve_f(int i, const LL t) {
  LL x = 4e18, b = B[i], c = C[i];  // x树的高度的拐点
  if (c &lt; 0) x = (b - 1 - c - 1) / -c - 1;  // 一开始递减, 第x+1天开始增长率=1
  LL l = 1, r = min(2LL * N, t) + 1;
  while (l + 1 &lt; r) {
    LL m = (l + r) / 2;
    BI s = 0;   // x是拐点
    if (x &gt; t)  // 直接计算从1到t(梯形面积)
      s = (BI)(b + c * m + b + c * t) * (t - m + 1) / 2;
    else if (x &gt;= m)  // m到x, x+1到t两段, 梯形+矩形的面积
      s = (BI)(b + c * m + b + c * x) * (x - m + 1) / 2 + t - x;
    else  // x &lt; m, 所以m到t一路增长率都是1
      s = t - m + 1;
    (s &lt; A[i] ? r : l) = m;
  }
  return r;
}
bool check(LL t) {
  for (int i = 1; i &lt;= N; i++) {
    LL f = solve_f(i, t);
    if (f == 1) return false;
    F[i] = f - 1;
  }
  dfs(1, 0);  // 父亲u还要考虑儿子v的种植时间要求(可能更早)
  sort(F + 1, F + N + 1);  // 按照最晚种植的要求从低到高排序
  for (int i = 1; i &lt;= N; i++)
    if (F[i] &lt; i) return false;  // 无法满足要求
  return true;
}
int main() {
  ios::sync_with_stdio(false), cin.tie(0);
  cin &gt;&gt; N;
  for (int i = 1; i &lt;= N; i++) cin &gt;&gt; A[i] &gt;&gt; B[i] &gt;&gt; C[i];
  for (int i = 1, u, v; i &lt; N; i++)
    cin &gt;&gt; u &gt;&gt; v, G[u].push_back(v), G[v].push_back(u);
  int l = N, r = 1e9;  // 保证r一直是合法解
  while (l + 1 &lt; r) {
    int m = (l + r) / 2;
    (check(m) ? r : l) = m;
  }
  return printf(&quot;%d\n&quot;, r), 0;
}
// AC 100</code></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://ggapa.github.io/2023/11/15/csp-s-2023-%e4%bb%a3%e7%a0%81/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
